{"remainingRequest":"/Users/heyuanpeng/个人项目/vueTool/node_modules/babel-loader/lib/index.js!/Users/heyuanpeng/个人项目/vueTool/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/heyuanpeng/个人项目/vueTool/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/heyuanpeng/个人项目/vueTool/node_modules/vue-easytable/libs/v-table/src/table.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/heyuanpeng/个人项目/vueTool/node_modules/vue-easytable/libs/v-table/src/table.vue","mtime":1573543942417},{"path":"/Users/heyuanpeng/个人项目/vueTool/node_modules/cache-loader/dist/cjs.js","mtime":1567574739571},{"path":"/Users/heyuanpeng/个人项目/vueTool/node_modules/babel-loader/lib/index.js","mtime":1565602919806},{"path":"/Users/heyuanpeng/个人项目/vueTool/node_modules/cache-loader/dist/cjs.js","mtime":1567574739571},{"path":"/Users/heyuanpeng/个人项目/vueTool/node_modules/vue-loader/lib/index.js","mtime":1565602921100}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.some\";\nimport \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/es6.array.map\";\nimport \"core-js/modules/es6.array.reduce\";\nimport \"core-js/modules/es6.array.is-array\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport classesMixin from \"./classes-mixin.js\";\nimport scrollControlMixin from \"./scroll-control-mixin.js\";\nimport frozenColumnsMixin from \"./frozen-columns-mixin.js\";\nimport tableResizeMixin from \"./table-resize-mixin.js\";\nimport sortControlMixin from \"./sort-control-mixin.js\";\nimport tableEmptyMixin from \"./table-empty-mixin.js\";\nimport dragWidthMixin from \"./drag-width-mixin.js\";\nimport cellEditMixin from \"./cell-edit-mixin.js\";\nimport bodyCellMergeMixin from \"./body-cell-merge-mixin.js\";\nimport titleCellMergeMixin from \"./title-cell-merge-mixin.js\";\nimport checkboxSelectionMixin from \"./checkbox-selection-mixin.js\";\nimport tableFooterMixin from \"./table-footer-mixin.js\";\nimport scrollBarControlMixin from \"./scroll-bar-control-mixin.js\";\nimport tableRowMouseEventsMixin from \"./table-row-mouse-events-mixin\";\nimport tableFiltersMixin from \"./table-filters-mixin\";\nimport utils from \"../../src/utils/utils.js\";\nimport deepClone from \"../../src/utils/deepClone.js\";\nimport tableEmpty from \"./table-empty.vue\";\nimport loading from \"./loading.vue\";\nimport VCheckboxGroup from \"../../v-checkbox-group/index.js\";\nimport VCheckbox from \"../../v-checkbox/index.js\";\nimport VDropdown from \"../../v-dropdown/index.js\";\nexport default {\n  name: 'v-table',\n  mixins: [classesMixin, tableResizeMixin, frozenColumnsMixin, scrollControlMixin, sortControlMixin, tableEmptyMixin, dragWidthMixin, cellEditMixin, bodyCellMergeMixin, titleCellMergeMixin, checkboxSelectionMixin, tableFooterMixin, scrollBarControlMixin, tableRowMouseEventsMixin, tableFiltersMixin],\n  components: {\n    tableEmpty: tableEmpty,\n    loading: loading,\n    VCheckboxGroup: VCheckboxGroup,\n    VCheckbox: VCheckbox,\n    VDropdown: VDropdown\n  },\n  data: function data() {\n    return {\n      // 本地列表数据\n      internalTableData: [],\n      // 本地宽度\n      internalWidth: 0,\n      // 本地高度\n      internalHeight: 0,\n      // 本地列数据\n      internalColumns: [],\n      // 本地复杂表头数据\n      internalTitleRows: [],\n      errorMsg: ' V-Table error: ',\n      // 最大宽度（当width:'max'时）\n      maxWidth: 5000,\n      hasFrozenColumn: false,\n      // 是否拥有固定列（false时最后一列的右边border无边框）\n      resizeTimer: null\n    };\n  },\n  props: {\n    width: [Number, String],\n    minWidth: {\n      type: Number,\n      default: 50\n    },\n    height: {\n      type: Number,\n      require: false\n    },\n    minHeight: {\n      type: Number,\n      default: 50\n    },\n    titleRowHeight: {\n      type: Number,\n      default: 38\n    },\n    // 随着浏览器窗口改变，横向自适应\n    isHorizontalResize: {\n      type: Boolean,\n      default: false\n    },\n    // 随着浏览器窗口改变，垂直自适应\n    isVerticalResize: {\n      type: Boolean,\n      default: false\n    },\n    // 垂直自适应偏移量\n    verticalResizeOffset: {\n      type: Number,\n      default: 0\n    },\n    tableBgColor: {\n      type: String,\n      default: '#fff'\n    },\n    // 表头背景颜色\n    titleBgColor: {\n      type: String,\n      default: '#fff'\n    },\n    // 奇数行颜色\n    oddBgColor: {\n      type: String,\n      default: ''\n    },\n    // 偶数行颜色\n    evenBgColor: {\n      type: String,\n      default: ''\n    },\n    // 内容行高\n    rowHeight: {\n      type: Number,\n      default: 40\n    },\n    // 多列排序\n    multipleSort: {\n      type: Boolean,\n      default: true\n    },\n    // 只在 升序和倒序切换\n    sortAlways: {\n      type: Boolean,\n      default: false\n    },\n    columns: {\n      type: Array,\n      require: true\n    },\n    // 特殊表头\n    titleRows: {\n      type: Array,\n      require: true,\n      default: function _default() {\n        return [];\n      }\n    },\n    tableData: {\n      type: Array,\n      require: true,\n      default: function _default() {\n        return [];\n      }\n    },\n    // 分页序号\n    pagingIndex: Number,\n    // 没数据时的html\n    errorContent: {\n      type: String,\n      default: '暂无数据'\n    },\n    // 没数据时内容区域高度\n    errorContentHeight: {\n      type: Number,\n      default: 50\n    },\n    // 是否正在加载,为false 则会显示错误信息（如果加载时间较长，最好设置为true,数据返回后设置为false）\n    isLoading: {\n      type: Boolean,\n      default: false\n    },\n    loadingContent: {\n      type: String,\n      default: '<span><i class=\"v-icon-spin5 animate-loading-23\" style=\"font-size: 28px;opacity:0.6;\"></i></span>'\n    },\n    // 不设置则没有hover效果\n    rowHoverColor: {\n      type: String\n    },\n    rowClickColor: {\n      type: String\n    },\n    showVerticalBorder: {\n      type: Boolean,\n      default: true\n    },\n    showHorizontalBorder: {\n      type: Boolean,\n      default: true\n    },\n    footer: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    footerRowHeight: {\n      type: Number,\n      default: 40\n    },\n    columnWidthDrag: {\n      type: Boolean,\n      default: false\n    },\n    loadingOpacity: {\n      type: Number,\n      default: 0.6\n    },\n    // 表体单元格样式回调\n    columnCellClassName: Function,\n    // footer单元格样式回调\n    footerCellClassName: Function,\n    // 行单击回调\n    rowClick: Function,\n    // 行双击回调\n    rowDblclick: Function,\n    // 表头单元格单击回调\n    titleClick: Function,\n    // 表头单元格双击回调\n    titleDblclick: Function,\n    // 鼠标进入行的回调\n    rowMouseEnter: Function,\n    // 鼠标离开行的回调\n    rowMouseLeave: Function,\n    // 单元格编辑完成回调\n    cellEditDone: Function,\n    // 单元格合并\n    cellMerge: Function,\n    // select all\n    selectAll: Function,\n    // 单个checkbox change event\n    selectChange: Function,\n    // checkbox-group change event\n    selectGroupChange: Function,\n    // filter event\n    filterMethod: Function\n  },\n  computed: {\n    // 是否是复杂表头\n    isComplexTitle: function isComplexTitle() {\n      return Array.isArray(this.internalTitleRows) && this.internalTitleRows.length > 0;\n    },\n    // 获取表格高度\n    getTableHeight: function getTableHeight() {\n      return this.isTableEmpty ? this.tableEmptyHeight : this.internalHeight;\n    },\n    // 左侧区域宽度\n    leftViewWidth: function leftViewWidth() {\n      var result = 0;\n\n      if (this.hasFrozenColumn) {\n        result = this.frozenCols.reduce(function (total, curr) {\n          return total + curr.width;\n        }, 0);\n      }\n\n      return result;\n    },\n    // 右侧区域宽度\n    rightViewWidth: function rightViewWidth() {\n      var result = this.internalWidth - this.leftViewWidth;\n      return this.hasFrozenColumn ? result - 2 : result;\n    },\n    // 左侧、右侧区域高度\n    bodyViewHeight: function bodyViewHeight() {\n      var result;\n\n      if (this.internalTitleRows.length > 0) {\n        result = this.internalHeight - this.titleRowHeight * (this.internalTitleRows.length + this.getTitleRowspanTotalCount);\n      } else {\n        result = this.internalHeight - this.titleRowHeight;\n      } // 1px: 当有滚动条时，使滚动条显示全\n\n\n      result -= this.footerTotalHeight + 1;\n      return result;\n    },\n    // 所有列的总宽度\n    totalColumnsWidth: function totalColumnsWidth() {\n      return this.internalColumns.reduce(function (total, curr) {\n        return curr.width ? total + curr.width : total;\n      }, 0);\n    },\n    // 获取未固定列的总宽度\n    totalNoFrozenColumnsWidth: function totalNoFrozenColumnsWidth() {\n      return this.noFrozenCols.reduce(function (total, curr) {\n        return curr.width ? total + curr.width : total;\n      }, 0);\n    },\n    // 获取所有的字段\n    getColumnsFields: function getColumnsFields() {\n      return this.internalColumns.map(function (item) {\n        return item.field;\n      });\n    },\n    // 获取非固定列的字段集合\n    getNoFrozenColumnsFields: function getNoFrozenColumnsFields() {\n      return this.internalColumns.filter(function (x) {\n        return !x.isFrozen;\n      }).map(function (item) {\n        return item.field;\n      });\n    },\n    // 获取固定列的字段集合\n    getFrozenColumnsFields: function getFrozenColumnsFields() {\n      return this.internalColumns.filter(function (x) {\n        return x.isFrozen;\n      }).map(function (item) {\n        return item.field;\n      });\n    }\n  },\n  methods: {\n    // custom columns component event\n    customCompFunc: function customCompFunc(params) {\n      this.$emit('on-custom-comp', params);\n    },\n    // 行颜色\n    trBgColor: function trBgColor(num) {\n      if (this.evenBgColor && this.evenBgColor.length > 0 || this.oddBgColor && this.oddBgColor.length > 0) {\n        return num % 2 === 0 ? {\n          'background-color': this.evenBgColor\n        } : {\n          'background-color': this.oddBgColor\n        };\n      }\n    },\n    // 设置 column 列的样式\n    setColumnCellClassName: function setColumnCellClassName(rowIndex, field, rowData) {\n      return this.columnCellClassName && this.columnCellClassName(rowIndex, field, rowData);\n    },\n    // 获取每个表头列的宽度\n    titleColumnWidth: function titleColumnWidth(fields) {\n      var result = 0;\n\n      if (Array.isArray(fields)) {\n        var matchItems = this.internalColumns.filter(function (item, index) {\n          return fields.some(function (x) {\n            return x === item.field;\n          });\n        });\n        result = matchItems.reduce(function (total, curr) {\n          return total + curr.width;\n        }, 0);\n      } else {\n        console.error(this.errorMsg + 'the fields attribute must be a array in titleRows');\n      }\n\n      return result;\n    },\n    // 获取每个表头列的高度\n    titleColumnHeight: function titleColumnHeight(rowspan) {\n      if (rowspan && rowspan > 0) {\n        return this.titleRowHeight * rowspan;\n      } else {\n        return this.titleRowHeight;\n      }\n    },\n    // 超出的title提示\n    overflowTitle: function overflowTitle(row, rowIndex, col) {\n      var result = '';\n\n      if (typeof col.formatter === 'function') {\n        var val = col.formatter(row, rowIndex, this.pagingIndex, col.field); // 如果是html 不处理\n\n        if (utils.isHtml(val)) {\n          result = '';\n        } else {\n          result = val;\n        }\n      } else {\n        result = row[col.field];\n      }\n\n      return result;\n    },\n    // 获取所有列的总高度\n    getTotalColumnsHeight: function getTotalColumnsHeight() {\n      var titleTotalHeight = this.internalTitleRows && this.internalTitleRows.length > 0 ? this.titleRowHeight * this.internalTitleRows.length : this.titleRowHeight;\n      titleTotalHeight += this.footerTotalHeight;\n      return titleTotalHeight + this.internalTableData.length * this.rowHeight + 1;\n    },\n    // 初始化width\n    initTableWidth: function initTableWidth() {\n      this.internalWidth = this.isHorizontalResize ? this.maxWidth : this.width;\n    },\n    // 当宽度设置 && 非固定列未设置宽度时（列自适应）初始化列集合\n    initColumns: function initColumns() {\n      this.internalHeight = this.height;\n      this.footerTotalHeight = this.getFooterTotalRowHeight;\n      this.internalColumns = Array.isArray(this.columns) ? deepClone(this.columns) : [];\n      this.internalTitleRows = Array.isArray(this.titleRows) ? deepClone(this.titleRows) : [];\n      this.initColumnsFilters();\n      this.initResizeColumns();\n      this.hasFrozenColumn = this.internalColumns.some(function (x) {\n        return x.isFrozen;\n      });\n      this.initTableWidth();\n      this.setSortColumns();\n      var self = this,\n          widthCountCheck = 0;\n\n      if (self.internalWidth && self.internalWidth > 0) {\n        self.internalColumns.map(function (item) {\n          if (!(item.width && item.width > 0)) {\n            widthCountCheck++;\n\n            if (self.isHorizontalResize) {\n              console.error(self.errorMsg + \"If you are using the isHorizontalResize property,Please set the value for each column's width\");\n            } else {\n              item.width = self.internalWidth - self.totalColumnsWidth;\n            }\n          }\n        });\n      }\n\n      if (widthCountCheck > 1) {\n        console.error(this.errorMsg + 'Only allow one column is not set width');\n      }\n    },\n    // 当没设置宽度和高度时动态计算\n    initView: function initView() {\n      // 当没有设置宽度计算总宽度\n      if (!(this.internalWidth && this.internalWidth > 0)) {\n        if (this.columns && this.columns.length > 0) {\n          this.internalWidth = this.columns.reduce(function (total, curr) {\n            return total + curr.width;\n          }, 0);\n        }\n      }\n\n      var totalColumnsHeight = this.getTotalColumnsHeight(); // 当没有设置高度时计算总高度 || 设置的高度大于所有列高度之和时\n\n      if (!(this.height && this.height > 0) || this.height > totalColumnsHeight) {\n        if (!this.isVerticalResize) {\n          this.internalHeight = totalColumnsHeight;\n        }\n      } else if (this.height <= totalColumnsHeight) {\n        this.internalHeight = this.height;\n      }\n    },\n    initInternalTableData: function initInternalTableData() {\n      return Array.isArray(this.tableData) ? deepClone(this.tableData) : [];\n    },\n    // 对外暴露（隐藏显示切换时）\n    resize: function resize() {\n      var _this = this;\n\n      // fixed bug in IE9 #17\n      this.resizeTimer = setTimeout(function (x) {\n        _this.tableResize();\n      });\n    }\n  },\n  created: function created() {\n    this.internalTableData = this.initInternalTableData(this.tableData);\n\n    if (Array.isArray(this.columns) && this.columns.length > 0) {\n      this.initColumns();\n    }\n\n    this.updateCheckboxGroupModel();\n    this.initView();\n  },\n  mounted: function mounted() {\n    this.setScrollbarWidth();\n    this.tableEmpty();\n    this.tableResize();\n\n    if (Array.isArray(this.tableData) && this.tableData.length > 0) {\n      this.scrollControl();\n    }\n\n    this.controlScrollBar();\n  },\n  watch: {\n    // 重新跟新列信息\n    'columns': {\n      handler: function handler(newVal) {\n        this.initColumns(); // fix issue #261\n\n        this.tableResize();\n      },\n      deep: true\n    },\n    // 重新覆盖复杂表头信息\n    'titleRows': {\n      handler: function handler(newVal) {\n        this.initColumns();\n      },\n      deep: true\n    },\n    // deep watch\n    'tableData': {\n      handler: function handler(newVal) {\n        this.skipRenderCells = [];\n        this.internalTableData = this.initInternalTableData(newVal);\n        this.updateCheckboxGroupModel();\n        this.tableEmpty();\n\n        if (Array.isArray(newVal) && newVal.length > 0) {\n          this.initView();\n          this.scrollControl();\n        }\n\n        this.resize();\n      },\n      deep: true\n    },\n    'pagingIndex': {\n      handler: function handler() {\n        this.clearCurrentRow();\n        this.bodyScrollTop();\n      }\n    }\n  },\n  beforeDestroy: function beforeDestroy() {\n    clearTimeout(this.resizeTimer);\n  }\n};",{"version":3,"sources":["table.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div class=\"v-table-views v-table-class\"\r\n         :style=\"{'width': internalWidth+'px', 'height': getTableHeight+'px','background-color':tableBgColor}\">\r\n        <!--左列-->\r\n        <template v-if=\"frozenCols.length > 0\">\r\n            <div class=\"v-table-leftview\" :style=\"{'width':leftViewWidth+'px'}\">\r\n                <!--左列头-->\r\n                <div class=\"v-table-header v-table-title-class\"\r\n                     :style=\"{'width': leftViewWidth+'px','background-color':titleBgColor}\">\r\n                    <div class=\"v-table-header-inner\" style=\"display: block;\">\r\n                        <table class=\"v-table-htable\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n                            <tbody>\r\n\r\n                            <template v-if=\"frozenTitleCols.length > 0\">\r\n                                <tr v-for=\"row in frozenTitleCols\">\r\n                                    <td v-for=\"col in row\"\r\n                                        :class=\"[col.titleCellClassName]\"\r\n                                        :colspan=\"col.colspan\" :rowspan=\"col.rowspan\"\r\n\r\n                                        @mousemove.stop=\"handleTitleMouseMove($event,col.fields)\"\r\n                                        @mousedown.stop=\"handleTitleMouseDown($event)\"\r\n                                        @mouseout.stop=\"handleTitleMouseOut()\"\r\n                                        @click.stop=\"titleCellClick(col.fields,col.title);\"\r\n                                        @dblclick.stop=\"titleCellDblClick(col.fields,col.title)\">\r\n                                        <div :class=\"['v-table-title-cell',showVerticalBorder?'vertical-border':'',showHorizontalBorder?'horizontal-border':'']\"\r\n                                             :style=\"{'width':titleColumnWidth(col.fields)+'px','height':titleColumnHeight(col.rowspan)+'px','text-align':col.titleAlign}\">\r\n                                            <span class=\"table-title\">\r\n                                               <span v-if=\"isSelectionCol(col.fields)\">\r\n                                                     <v-checkbox\r\n                                                             @change=\"handleCheckAll\"\r\n                                                             :indeterminate=\"indeterminate\"\r\n                                                             v-model=\"isAllChecked\"\r\n                                                             :show-slot=\"false\"\r\n                                                             label=\"check-all\"\r\n                                                     ></v-checkbox>\r\n                                                </span>\r\n                                                <span v-else v-html=\"col.title\"></span>\r\n                                                <span @click.stop=\"sortControl(col.fields[0])\"\r\n                                                      class=\"v-table-sort-icon\" v-if=\"enableSort(col.orderBy)\">\r\n                                                        <i :class='[\"v-icon-up-dir\",getCurrentSort(col.fields[0]) ===\"asc\" ? \"checked\":\"\"]'></i>\r\n                                                        <i :class='[\"v-icon-down-dir\",getCurrentSort(col.fields[0]) ===\"desc\" ? \"checked\":\"\"]'></i>\r\n                                                </span>\r\n                                            </span>\r\n                                            <!--filters-->\r\n                                            <v-dropdown class=\"v-table-dropdown\" v-if=\"enableFilters(col.filters,col.fields)\"\r\n                                                        v-model=\"col.filters\"\r\n                                                        :show-operation=\"col.filterMultiple\"\r\n                                                        :is-multiple=\"col.filterMultiple\"\r\n                                                        @on-filter-method=\"filterEvent\"\r\n                                                        @change=\"filterConditionChange(col.filterMultiple)\"\r\n                                            >\r\n                                                <i :class=\"['v-table-filter-icon',vTableFiltersIcon(col.filters)]\"></i>\r\n                                            </v-dropdown>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            </template>\r\n\r\n                            <template v-else>\r\n                                <tr class=\"v-table-header-row\">\r\n                                    <td v-for=\"col in frozenCols\"\r\n                                        :class=\"[col.titleCellClassName]\"\r\n                                        @mousemove.stop=\"handleTitleMouseMove($event,col.field)\"\r\n                                        @mousedown.stop=\"handleTitleMouseDown($event)\"\r\n                                        @mouseout.stop=\"handleTitleMouseOut()\"\r\n                                        @click.stop=\"titleCellClick(col.field,col.title);\"\r\n                                        @dblclick.stop=\"titleCellDblClick(col.field,col.title)\">\r\n                                        <div :class=\"['v-table-title-cell',showVerticalBorder?'vertical-border':'',showHorizontalBorder?'horizontal-border':'']\"\r\n                                             :style=\"{'width':col.width+'px','height':titleRowHeight+'px','text-align':col.titleAlign}\">\r\n                                                <span class=\"table-title\">\r\n                                                     <span v-if=\"col.type === 'selection'\">\r\n                                                         <v-checkbox\r\n                                                                 @change=\"handleCheckAll\"\r\n                                                                 :indeterminate=\"indeterminate\"\r\n                                                                 v-model=\"isAllChecked\"\r\n                                                                 :show-slot=\"false\"\r\n                                                                 label=\"check-all\"\r\n                                                         ></v-checkbox>\r\n                                                    </span>\r\n                                                    <span v-else v-html=\"col.title\"></span>\r\n                                                    <span @click.stop=\"sortControl(col.field)\"\r\n                                                          class=\"v-table-sort-icon\" v-if=\"enableSort(col.orderBy)\">\r\n                                                            <i :class='[\"v-icon-up-dir\",getCurrentSort(col.field) ===\"asc\" ? \"checked\":\"\"]'></i>\r\n                                                            <i :class='[\"v-icon-down-dir\",getCurrentSort(col.field) ===\"desc\" ? \"checked\":\"\"]'></i>\r\n                                                    </span>\r\n                                                </span>\r\n                                                <!--filters-->\r\n                                                <v-dropdown class=\"v-table-dropdown\" v-if=\"enableFilters(col.filters)\"\r\n                                                            v-model=\"col.filters\"\r\n                                                            :show-operation=\"col.filterMultiple\"\r\n                                                            :is-multiple=\"col.filterMultiple\"\r\n                                                            @on-filter-method=\"filterEvent\"\r\n                                                            @change=\"filterConditionChange(col.filterMultiple)\"\r\n                                                >\r\n                                                    <i :class=\"['v-table-filter-icon',vTableFiltersIcon(col.filters)]\"></i>\r\n                                                </v-dropdown>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            </template>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n                <!--左列内容-->\r\n                <div class=\"v-table-body v-table-body-class\"\r\n                     :style=\"{'width': leftViewWidth+'px', 'height': bodyViewHeight+'px'}\">\r\n                    <div :class=\"['v-table-body-inner',vTableBodyInner]\">\r\n                        <v-checkbox-group v-model=\"checkboxGroupModel\" @change=\"handleCheckGroupChange\">\r\n                            <table class=\"v-table-btable\" cellspacing=\"0\" cellpadding=\"0\" border=\"0\">\r\n                                <tbody>\r\n                                <tr v-for=\"(item,rowIndex) in internalTableData\" class=\"v-table-row\"\r\n                                    :style=\"[trBgColor(rowIndex+1)]\"\r\n                                    @mouseenter.stop=\"handleMouseEnter(rowIndex)\"\r\n                                    @mouseleave.stop=\"handleMouseOut(rowIndex)\">\r\n                                    <td v-if=\"cellMergeInit(rowIndex,col.field,item,true)\"\r\n                                        v-for=\"(col,colIndex) in frozenCols\"\r\n                                        :key=\"colIndex\"\r\n                                        :colSpan=\"setColRowSpan(rowIndex,col.field,item).colSpan\"\r\n                                        :rowSpan=\"setColRowSpan(rowIndex,col.field,item).rowSpan\"\r\n                                        :class=\"[setColumnCellClassName(rowIndex,col.field,item)]\">\r\n                                        <!--存在列合并-->\r\n                                        <div v-if=\"isCellMergeRender(rowIndex,col.field,item)\"\r\n                                             :class=\"['v-table-body-cell',showVerticalBorder ? 'vertical-border':'',showHorizontalBorder?'horizontal-border':'']\"\r\n                                             :style=\"{'width':getRowWidthByColSpan(rowIndex,col.field,item)+'px','height': getRowHeightByRowSpan(rowIndex,col.field,item)+'px','line-height':getRowHeightByRowSpan(rowIndex,col.field,item)+'px','text-align':col.columnAlign}\"\r\n                                             :title=\"col.overflowTitle ?  overflowTitle(item,rowIndex,col) :''\"\r\n                                             @click.stop=\"rowCellClick(rowIndex,item,col);cellEditClick($event,col.isEdit,item,col.field,rowIndex)\"\r\n                                             @dblclick.stop=\"rowCellDbClick(rowIndex,item,col)\"\r\n                                        >\r\n                                        <span v-if=\"cellMergeContentType(rowIndex,col.field,item).isComponent\">\r\n                                            <component :rowData=\"item\" :field=\"col.field ? col.field : ''\"\r\n                                                       :index=\"rowIndex\"\r\n                                                       :is=\"cellMerge(rowIndex,item,col.field).componentName\"\r\n                                                       @on-custom-comp=\"customCompFunc\"></component>\r\n                                        </span>\r\n                                            <span v-else v-html=\"cellMerge(rowIndex,item,col.field).content\"></span>\r\n                                        </div>\r\n                                        <!--不存在列合并-->\r\n                                        <div v-else\r\n                                             :class=\"['v-table-body-cell',showVerticalBorder ? 'vertical-border':'',showHorizontalBorder?'horizontal-border':'']\"\r\n                                             :style=\"{'width':col.width+'px','height': rowHeight+'px','line-height':rowHeight+'px','text-align':col.columnAlign}\"\r\n                                             :title=\"col.overflowTitle ?  overflowTitle(item,rowIndex,col) :''\"\r\n                                             @click.stop=\"rowCellClick(rowIndex,item,col);cellEditClick($event,col.isEdit,item,col.field,rowIndex)\"\r\n                                             @dblclick.stop=\"rowCellDbClick(rowIndex,item,col)\"\r\n                                        >\r\n                                        <span v-if=\"typeof col.componentName ==='string' && col.componentName.length > 0\">\r\n                                            <component :rowData=\"item\" :field=\"col.field ? col.field : ''\"\r\n                                                       :index=\"rowIndex\" :is=\"col.componentName\"\r\n                                                       @on-custom-comp=\"customCompFunc\"></component>\r\n                                        </span>\r\n                                            <span v-else-if=\"typeof col.formatter==='function'\"\r\n                                                  v-html=\"col.formatter(item,rowIndex,pagingIndex,col.field)\"></span>\r\n                                            <span v-else-if=\"col.type === 'selection'\">\r\n                                            <v-checkbox @change=\"handleCheckChange(item)\" :show-slot=\"false\"\r\n                                                        :disabled=\"item._disabled\" :label=\"rowIndex\"></v-checkbox>\r\n                                        </span>\r\n                                            <span v-else>\r\n                                                {{item[col.field]}}\r\n                                        </span>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </v-checkbox-group>\r\n                    </div>\r\n                </div>\r\n\r\n                <!--footer-->\r\n                <div v-if=\"frozenFooterCols.length > 0\"\r\n                     :class=\"['v-table-footer','v-table-footer-class']\"\r\n                     :style=\"{'width': leftViewWidth+'px','height':footerTotalHeight}\">\r\n                    <table class=\"v-table-ftable\" cellspacing=\"0\" cellpadding=\"0\" border=\"0\">\r\n                        <tr class=\"v-table-row\" v-for=\"(item,rowIndex) in frozenFooterCols\">\r\n                            <td v-for=\"(col,colIndex) in item\"\r\n                                :class=\"setFooterCellClassName(true,rowIndex,colIndex,col.content)\">\r\n                                <div :style=\"{'height':footerRowHeight+'px','line-height':footerRowHeight+'px','width':col.width+'px','text-align':col.align}\"\r\n                                     :class=\"['v-table-body-cell',vTableBodyCell]\"\r\n                                     v-html=\"col.content\"></div>\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </template>\r\n        <!--右列-->\r\n        <div class=\"v-table-rightview\"\r\n             :style=\"{'width': rightViewWidth+'px'}\">\r\n            <!--右列头-->\r\n            <div class=\"v-table-header v-table-title-class\"\r\n                 :style=\"{'width': (rightViewWidth-1)+'px','background-color':titleBgColor}\">\r\n                <div class=\"v-table-header-inner\" style=\"display: block;\">\r\n                    <table class=\"v-table-htable\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n                        <tbody>\r\n\r\n                        <template v-if=\"noFrozenTitleCols.length > 0\">\r\n                            <tr v-for=\"row in noFrozenTitleCols\">\r\n                                <td v-for=\"col in row\"\r\n                                    :class=\"[col.titleCellClassName]\"\r\n                                    :colspan=\"col.colspan\" :rowspan=\"col.rowspan\"\r\n                                    @mousemove.stop=\"handleTitleMouseMove($event,col.fields)\"\r\n                                    @mousedown.stop=\"handleTitleMouseDown($event)\"\r\n                                    @mouseout.stop=\"handleTitleMouseOut()\"\r\n                                    @click.stop=\"titleCellClick(col.fields,col.title);\"\r\n                                    @dblclick.stop=\"titleCellDblClick(col.fields,col.title)\">\r\n                                    <div :class=\"['v-table-title-cell',showVerticalBorder?'vertical-border':'',showHorizontalBorder?'horizontal-border':'']\"\r\n                                         :style=\"{'width':titleColumnWidth(col.fields)+'px','height':titleColumnHeight(col.rowspan)+'px','text-align':col.titleAlign}\">\r\n                                        <span class=\"table-title\">\r\n                                          <span v-if=\"isSelectionCol(col.fields)\">\r\n                                                 <v-checkbox\r\n                                                         @change=\"handleCheckAll\"\r\n                                                         :indeterminate=\"indeterminate\"\r\n                                                         v-model=\"isAllChecked\"\r\n                                                         :show-slot=\"false\"\r\n                                                         label=\"check-all\"\r\n                                                 ></v-checkbox>\r\n                                            </span>\r\n                                            <span v-else v-html=\"col.title\"></span>\r\n                                            <span @click.stop=\"sortControl(col.fields[0])\"\r\n                                                  class=\"v-table-sort-icon\" v-if=\"enableSort(col.orderBy)\">\r\n                                                        <i :class='[\"v-icon-up-dir\",getCurrentSort(col.fields[0]) ===\"asc\" ? \"checked\":\"\"]'></i>\r\n                                                        <i :class='[\"v-icon-down-dir\",getCurrentSort(col.fields[0]) ===\"desc\" ? \"checked\":\"\"]'></i>\r\n                                            </span>\r\n                                        </span>\r\n                                        <!--filters-->\r\n                                        <v-dropdown class=\"v-table-dropdown\" v-if=\"enableFilters(col.filters,col.fields)\"\r\n                                                    v-model=\"col.filters\"\r\n                                                    :show-operation=\"col.filterMultiple\"\r\n                                                    :is-multiple=\"col.filterMultiple\"\r\n                                                    @on-filter-method=\"filterEvent\"\r\n                                                    @change=\"filterConditionChange(col.filterMultiple)\"\r\n                                        >\r\n                                            <i :class=\"['v-table-filter-icon',vTableFiltersIcon(col.filters)]\"></i>\r\n                                        </v-dropdown>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                        </template>\r\n\r\n                        <template v-else>\r\n                            <tr class=\"v-table-header-row\">\r\n                                <td v-for=\"(col,colIndex) in noFrozenCols\"\r\n                                    :class=\"[col.titleCellClassName]\"\r\n                                    @mousemove.stop=\"handleTitleMouseMove($event,col.field)\"\r\n                                    @mousedown.stop=\"handleTitleMouseDown($event)\"\r\n                                    @mouseout.stop=\"handleTitleMouseOut()\"\r\n                                    @click.stop=\"titleCellClick(col.field,col.title);\"\r\n                                    @dblclick.stop=\"titleCellDblClick(col.field,col.title)\">\r\n                                    <div :class=\"['v-table-title-cell',showVerticalBorder?'vertical-border':'',showHorizontalBorder?'horizontal-border':'']\"\r\n                                         :style=\"{'width':col.width+'px','height':titleRowHeight+'px','text-align':col.titleAlign}\">\r\n                                        <span class=\"table-title\">\r\n                                            <span v-if=\"col.type === 'selection'\">\r\n                                                 <v-checkbox\r\n                                                         @change=\"handleCheckAll\"\r\n                                                         :indeterminate=\"indeterminate\"\r\n                                                         v-model=\"isAllChecked\"\r\n                                                         :show-slot=\"false\"\r\n                                                         label=\"check-all\"\r\n                                                 ></v-checkbox>\r\n                                            </span>\r\n                                            <span v-else v-html=\"col.title\"></span>\r\n                                            <span @click.stop=\"sortControl(col.field)\"\r\n                                                  class=\"v-table-sort-icon\"\r\n                                                  v-if=\"enableSort(col.orderBy)\">\r\n                                                        <i :class='[\"v-icon-up-dir\",getCurrentSort(col.field) ===\"asc\" ? \"checked\":\"\"]'></i>\r\n                                                        <i :class='[\"v-icon-down-dir\",getCurrentSort(col.field) ===\"desc\" ? \"checked\":\"\"]'></i>\r\n                                            </span>\r\n                                            <!--filters-->\r\n                                            <v-dropdown class=\"v-table-dropdown\" v-if=\"enableFilters(col.filters)\"\r\n                                                        v-model=\"col.filters\"\r\n                                                        :show-operation=\"col.filterMultiple\"\r\n                                                        :is-multiple=\"col.filterMultiple\"\r\n                                                        @on-filter-method=\"filterEvent\"\r\n                                                        @change=\"filterConditionChange(col.filterMultiple)\"\r\n                                            >\r\n                                                 <i :class=\"['v-table-filter-icon',vTableFiltersIcon(col.filters)]\"></i>\r\n                                            </v-dropdown>\r\n                                        </span>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                        </template>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            <!--右列内容-->\r\n            <div :class=\"['v-table-body v-table-body-class',vTableRightBody]\"\r\n                 :style=\"{'width': rightViewWidth+'px', 'height': bodyViewHeight+'px'}\">\r\n                <v-checkbox-group v-model=\"checkboxGroupModel\" @change=\"handleCheckGroupChange\">\r\n                    <table class=\"v-table-btable\" cellspacing=\"0\" cellpadding=\"0\" border=\"0\">\r\n                        <tbody>\r\n                        <tr :key=\"rowIndex\" v-for=\"(item,rowIndex) in internalTableData\" class=\"v-table-row\"\r\n                            :style=\"[trBgColor(rowIndex+1)]\"\r\n                            @mouseenter.stop=\"handleMouseEnter(rowIndex)\"\r\n                            @mouseleave.stop=\"handleMouseOut(rowIndex)\"\r\n                        >\r\n                            <td v-if=\"cellMergeInit(rowIndex,col.field,item,false)\"\r\n                                v-for=\"(col,colIndex) in noFrozenCols\"\r\n                                :key=\"colIndex\"\r\n                                :colSpan=\"setColRowSpan(rowIndex,col.field,item).colSpan\"\r\n                                :rowSpan=\"setColRowSpan(rowIndex,col.field,item).rowSpan\"\r\n                                :class=\"[setColumnCellClassName(rowIndex,col.field,item)]\">\r\n                                <!--存在列合并-->\r\n                                <div v-if=\"isCellMergeRender(rowIndex,col.field,item)\"\r\n                                     :class=\"['v-table-body-cell',showVerticalBorder ? 'vertical-border':'',showHorizontalBorder?'horizontal-border':'']\"\r\n                                     :style=\"{'width':getRowWidthByColSpan(rowIndex,col.field,item)+'px','height': getRowHeightByRowSpan(rowIndex,col.field,item)+'px','line-height':getRowHeightByRowSpan(rowIndex,col.field,item)+'px','text-align':col.columnAlign}\"\r\n                                     :title=\"col.overflowTitle ?  overflowTitle(item,rowIndex,col) :''\"\r\n                                     @click.stop=\"rowCellClick(rowIndex,item,col);cellEditClick($event,col.isEdit,item,col.field,rowIndex)\"\r\n                                     @dblclick.stop=\"rowCellDbClick(rowIndex,item,col)\"\r\n                                >\r\n                                <span v-if=\"cellMergeContentType(rowIndex,col.field,item).isComponent\">\r\n                                    <component :rowData=\"item\" :field=\"col.field ? col.field : ''\" :index=\"rowIndex\"\r\n                                               :is=\"cellMerge(rowIndex,item,col.field).componentName\"\r\n                                               @on-custom-comp=\"customCompFunc\"></component>\r\n                                </span>\r\n                                    <span v-else v-html=\"cellMerge(rowIndex,item,col.field).content\">\r\n                                </span>\r\n                                </div>\r\n                                <!--不存在列合并-->\r\n                                <div v-else\r\n                                     :class=\"['v-table-body-cell',showVerticalBorder ? 'vertical-border':'',showHorizontalBorder?'horizontal-border':'']\"\r\n                                     :style=\"{'width':col.width+'px','height': rowHeight+'px','line-height':rowHeight+'px','text-align':col.columnAlign}\"\r\n                                     :title=\"col.overflowTitle ?  overflowTitle(item,rowIndex,col) :''\"\r\n                                     @click.stop=\"rowCellClick(rowIndex,item,col);cellEditClick($event,col.isEdit,item,col.field,rowIndex)\"\r\n                                     @dblclick.stop=\"rowCellDbClick(rowIndex,item,col)\"\r\n                                >\r\n                                <span v-if=\"typeof col.componentName ==='string' && col.componentName.length > 0\">\r\n                                    <component :rowData=\"item\" :field=\"col.field ? col.field : ''\" :index=\"rowIndex\"\r\n                                               :is=\"col.componentName\" @on-custom-comp=\"customCompFunc\"></component>\r\n                                </span>\r\n                                    <span v-else-if=\"typeof col.formatter==='function'\"\r\n                                          v-html=\"col.formatter(item,rowIndex,pagingIndex,col.field)\">\r\n                                </span>\r\n                                    <span v-else-if=\"col.type === 'selection'\">\r\n                                        <v-checkbox @change=\"handleCheckChange(item)\" :show-slot=\"false\"\r\n                                                    :disabled=\"item._disabled\" :label=\"rowIndex\"></v-checkbox>\r\n                                </span>\r\n                                    <span v-else>\r\n                                     {{item[col.field]}}\r\n                                </span>\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </v-checkbox-group>\r\n            </div>\r\n\r\n            <!--footer-->\r\n            <div v-if=\"noFrozenFooterCols.length > 0\"\r\n                 :class=\"['v-table-footer','v-table-footer-class',vTableFooter]\"\r\n                 :style=\"{'width': rightViewWidth+'px','height':footerTotalHeight}\">\r\n                <table class=\"v-table-ftable\" cellspacing=\"0\" cellpadding=\"0\" border=\"0\">\r\n                    <tr class=\"v-table-row\" v-for=\"(item,rowIndex) in noFrozenFooterCols\">\r\n                        <td v-for=\"(col,colIndex) in item\"\r\n                            :class=\"setFooterCellClassName(false,rowIndex,colIndex,col.content)\">\r\n                            <div :style=\"{'height':footerRowHeight+'px','line-height':footerRowHeight+'px','width':col.width+'px','text-align':col.align}\"\r\n                                 :class=\"['v-table-body-cell',vTableBodyCell]\"\r\n                                 v-html=\"col.content\"></div>\r\n                        </td>\r\n                    </tr>\r\n                </table>\r\n            </div>\r\n        </div>\r\n\r\n        <table-empty v-if=\"isTableEmpty\"\r\n                     :width=\"internalWidth\"\r\n                     :total-columns-width=\"totalColumnsWidth\"\r\n                     :content-height=\"errorContentHeight\"\r\n                     :title-height=\"getTotalColumnsHeight()\"\r\n                     :error-content=\"errorContent\"\r\n                     :is-loading=\"isLoading\"\r\n        ></table-empty>\r\n\r\n        <loading\r\n                v-if=\"isLoading\"\r\n                :loading-content=\"loadingContent\"\r\n                :title-rows=\"internalTitleRows\"\r\n                :title-row-height=\"titleRowHeight\"\r\n                :columns=\"internalColumns\"\r\n                :loading-opacity=\"loadingOpacity\"\r\n        ></loading>\r\n\r\n        <!--列拖动时的线条-->\r\n        <div v-show=\"isDragging\" class=\"v-table-drag-line\"></div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\n    import classesMixin from './classes-mixin.js'\r\n    import scrollControlMixin from './scroll-control-mixin.js'\r\n    import frozenColumnsMixin from './frozen-columns-mixin.js'\r\n    import tableResizeMixin from './table-resize-mixin.js'\r\n    import sortControlMixin from './sort-control-mixin.js'\r\n    import tableEmptyMixin from './table-empty-mixin.js'\r\n    import dragWidthMixin from './drag-width-mixin.js'\r\n    import cellEditMixin from './cell-edit-mixin.js'\r\n    import bodyCellMergeMixin from './body-cell-merge-mixin.js'\r\n    import titleCellMergeMixin from './title-cell-merge-mixin.js'\r\n    import checkboxSelectionMixin from './checkbox-selection-mixin.js'\r\n    import tableFooterMixin from './table-footer-mixin.js'\r\n    import scrollBarControlMixin from './scroll-bar-control-mixin.js'\r\n    import tableRowMouseEventsMixin from './table-row-mouse-events-mixin'\r\n    import tableFiltersMixin from './table-filters-mixin'\r\n\r\n    import utils from '../../src/utils/utils.js'\r\n    import deepClone from '../../src/utils/deepClone.js'\r\n\r\n    import tableEmpty from './table-empty.vue'\r\n    import loading from './loading.vue'\r\n    import VCheckboxGroup from '../../v-checkbox-group/index.js'\r\n    import VCheckbox from '../../v-checkbox/index.js'\r\n    import VDropdown from '../../v-dropdown/index.js'\r\n\r\n\r\n    export default {\r\n        name: 'v-table',\r\n        mixins: [classesMixin, tableResizeMixin, frozenColumnsMixin, scrollControlMixin, sortControlMixin, tableEmptyMixin, dragWidthMixin, cellEditMixin, bodyCellMergeMixin, titleCellMergeMixin, checkboxSelectionMixin, tableFooterMixin, scrollBarControlMixin, tableRowMouseEventsMixin, tableFiltersMixin],\r\n        components: {tableEmpty, loading, VCheckboxGroup, VCheckbox, VDropdown},\r\n        data(){\r\n            return {\r\n                // 本地列表数据\r\n                internalTableData: [],\r\n                // 本地宽度\r\n                internalWidth: 0,\r\n                // 本地高度\r\n                internalHeight: 0,\r\n                // 本地列数据\r\n                internalColumns: [],\r\n                // 本地复杂表头数据\r\n                internalTitleRows: [],\r\n                errorMsg: ' V-Table error: ',\r\n                // 最大宽度（当width:'max'时）\r\n                maxWidth: 5000,\r\n                hasFrozenColumn: false,// 是否拥有固定列（false时最后一列的右边border无边框）\r\n                resizeTimer: null\r\n            }\r\n        },\r\n        props: {\r\n            width: [Number, String],\r\n            minWidth: {\r\n                type: Number,\r\n                default: 50\r\n            },\r\n            height: {\r\n                type: Number,\r\n                require: false\r\n            },\r\n            minHeight: {\r\n                type: Number,\r\n                default: 50\r\n            },\r\n            titleRowHeight: {\r\n                type: Number,\r\n                default: 38\r\n            },\r\n            // 随着浏览器窗口改变，横向自适应\r\n            isHorizontalResize: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            // 随着浏览器窗口改变，垂直自适应\r\n            isVerticalResize: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n\r\n            // 垂直自适应偏移量\r\n            verticalResizeOffset: {\r\n                type: Number,\r\n                default: 0\r\n            },\r\n\r\n            tableBgColor: {\r\n                type: String,\r\n                default: '#fff'\r\n            },\r\n\r\n            // 表头背景颜色\r\n            titleBgColor: {\r\n                type: String,\r\n                default: '#fff'\r\n            },\r\n\r\n            // 奇数行颜色\r\n            oddBgColor: {\r\n                type: String,\r\n                default: ''\r\n            },\r\n            // 偶数行颜色\r\n            evenBgColor: {\r\n                type: String,\r\n                default: ''\r\n            },\r\n            // 内容行高\r\n            rowHeight: {\r\n                type: Number,\r\n                default: 40\r\n            },\r\n            // 多列排序\r\n            multipleSort: {\r\n                type: Boolean,\r\n                default: true\r\n            },\r\n            // 只在 升序和倒序切换\r\n            sortAlways: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            columns: {\r\n                type: Array,\r\n                require: true\r\n            },\r\n\r\n            // 特殊表头\r\n            titleRows: {\r\n                type: Array,\r\n                require: true,\r\n                default: function () {\r\n                    return []\r\n                }\r\n            },\r\n            tableData: {\r\n                type: Array,\r\n                require: true,\r\n                default: function () {\r\n                    return []\r\n                }\r\n            },\r\n            // 分页序号\r\n            pagingIndex: Number,\r\n            // 没数据时的html\r\n            errorContent: {\r\n                type: String,\r\n                default: '暂无数据'\r\n            },\r\n            // 没数据时内容区域高度\r\n            errorContentHeight: {\r\n                type: Number,\r\n                default: 50\r\n            },\r\n            // 是否正在加载,为false 则会显示错误信息（如果加载时间较长，最好设置为true,数据返回后设置为false）\r\n            isLoading: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            loadingContent: {\r\n                type: String,\r\n                default: '<span><i class=\"v-icon-spin5 animate-loading-23\" style=\"font-size: 28px;opacity:0.6;\"></i></span>'\r\n            },\r\n            // 不设置则没有hover效果\r\n            rowHoverColor: {\r\n                type: String\r\n            },\r\n            rowClickColor: {\r\n                type: String\r\n            },\r\n            showVerticalBorder: {\r\n                type: Boolean,\r\n                default: true\r\n            },\r\n            showHorizontalBorder: {\r\n                type: Boolean,\r\n                default: true\r\n            },\r\n            footer: {\r\n                type: Array,\r\n                default: function () {\r\n                    return []\r\n                }\r\n            },\r\n            footerRowHeight: {\r\n                type: Number,\r\n                default: 40\r\n            },\r\n            columnWidthDrag: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            loadingOpacity: {\r\n                type: Number,\r\n                default: 0.6\r\n            },\r\n            // 表体单元格样式回调\r\n            columnCellClassName: Function,\r\n            // footer单元格样式回调\r\n            footerCellClassName: Function,\r\n            // 行单击回调\r\n            rowClick: Function,\r\n            // 行双击回调\r\n            rowDblclick: Function,\r\n            // 表头单元格单击回调\r\n            titleClick: Function,\r\n            // 表头单元格双击回调\r\n            titleDblclick: Function,\r\n            // 鼠标进入行的回调\r\n            rowMouseEnter: Function,\r\n            // 鼠标离开行的回调\r\n            rowMouseLeave: Function,\r\n            // 单元格编辑完成回调\r\n            cellEditDone: Function,\r\n            // 单元格合并\r\n            cellMerge: Function,\r\n            // select all\r\n            selectAll: Function,\r\n            // 单个checkbox change event\r\n            selectChange: Function,\r\n            // checkbox-group change event\r\n            selectGroupChange: Function,\r\n            // filter event\r\n            filterMethod: Function\r\n        },\r\n        computed: {\r\n\r\n            // 是否是复杂表头\r\n            isComplexTitle(){\r\n\r\n                return (Array.isArray(this.internalTitleRows) && this.internalTitleRows.length > 0);\r\n            },\r\n\r\n            // 获取表格高度\r\n            getTableHeight(){\r\n\r\n                return this.isTableEmpty ? this.tableEmptyHeight : this.internalHeight;\r\n            },\r\n\r\n            // 左侧区域宽度\r\n            leftViewWidth(){\r\n                var result = 0\r\n                if (this.hasFrozenColumn) {\r\n                    result = this.frozenCols.reduce((total, curr) => total + curr.width, 0);\r\n                }\r\n                return result\r\n            },\r\n            // 右侧区域宽度\r\n            rightViewWidth(){\r\n\r\n                let result = this.internalWidth - this.leftViewWidth;\r\n\r\n                return this.hasFrozenColumn ? result - 2 : result;\r\n            },\r\n\r\n            // 左侧、右侧区域高度\r\n            bodyViewHeight(){\r\n                var result;\r\n                if (this.internalTitleRows.length > 0) {\r\n\r\n                    result = this.internalHeight - this.titleRowHeight * (this.internalTitleRows.length + this.getTitleRowspanTotalCount);\r\n                } else {\r\n                    result = this.internalHeight - this.titleRowHeight;\r\n                }\r\n\r\n                // 1px: 当有滚动条时，使滚动条显示全\r\n                result -= (this.footerTotalHeight + 1);\r\n\r\n                return result;\r\n            },\r\n\r\n            // 所有列的总宽度\r\n            totalColumnsWidth(){\r\n                return this.internalColumns.reduce(function (total, curr) {\r\n                    return curr.width ? (total + curr.width) : total;\r\n                }, 0)\r\n            },\r\n\r\n            // 获取未固定列的总宽度\r\n            totalNoFrozenColumnsWidth(){\r\n\r\n                return this.noFrozenCols.reduce(function (total, curr) {\r\n                    return curr.width ? (total + curr.width) : total;\r\n                }, 0)\r\n            },\r\n\r\n            // 获取所有的字段\r\n            getColumnsFields(){\r\n                return this.internalColumns.map((item) => {\r\n                    return item.field;\r\n                })\r\n            },\r\n\r\n            // 获取非固定列的字段集合\r\n            getNoFrozenColumnsFields(){\r\n                return this.internalColumns.filter(x => !x.isFrozen).map((item) => {\r\n                    return item.field;\r\n                })\r\n            },\r\n\r\n            // 获取固定列的字段集合\r\n            getFrozenColumnsFields(){\r\n                return this.internalColumns.filter(x => x.isFrozen).map((item) => {\r\n                    return item.field;\r\n                })\r\n            }\r\n        },\r\n        methods: {\r\n            // custom columns component event\r\n            customCompFunc(params){\r\n\r\n                this.$emit('on-custom-comp', params);\r\n            },\r\n\r\n            // 行颜色\r\n            trBgColor(num){\r\n                if ((this.evenBgColor && this.evenBgColor.length > 0) || (this.oddBgColor && this.oddBgColor.length > 0)) {\r\n                    return num % 2 === 0 ? {'background-color': this.evenBgColor} : {'background-color': this.oddBgColor};\r\n                }\r\n            },\r\n\r\n            // 设置 column 列的样式\r\n            setColumnCellClassName(rowIndex, field, rowData){\r\n\r\n                return this.columnCellClassName && this.columnCellClassName(rowIndex, field, rowData);\r\n            },\r\n\r\n            // 获取每个表头列的宽度\r\n            titleColumnWidth(fields){\r\n                var result = 0;\r\n                if (Array.isArray(fields)) {\r\n                    var matchItems = this.internalColumns.filter((item, index) => {\r\n                        return fields.some(x => x === item.field);\r\n                    })\r\n\r\n                    result = matchItems.reduce((total, curr) => total + curr.width, 0);\r\n                } else {\r\n                    console.error(this.errorMsg + 'the fields attribute must be a array in titleRows')\r\n                }\r\n                return result;\r\n            },\r\n\r\n            // 获取每个表头列的高度\r\n            titleColumnHeight(rowspan){\r\n                if (rowspan && rowspan > 0) {\r\n                    return this.titleRowHeight * rowspan;\r\n                } else {\r\n                    return this.titleRowHeight;\r\n                }\r\n            },\r\n\r\n            // 超出的title提示\r\n            overflowTitle(row, rowIndex, col){\r\n\r\n                var result = '';\r\n                if (typeof col.formatter === 'function') {\r\n                    var val = col.formatter(row, rowIndex, this.pagingIndex, col.field);\r\n                    // 如果是html 不处理\r\n                    if (utils.isHtml(val)) {\r\n                        result = '';\r\n                    } else {\r\n                        result = val;\r\n                    }\r\n                } else {\r\n                    result = row[col.field];\r\n                }\r\n                return result;\r\n            },\r\n\r\n            // 获取所有列的总高度\r\n            getTotalColumnsHeight(){\r\n\r\n                var titleTotalHeight = (this.internalTitleRows && this.internalTitleRows.length > 0) ? this.titleRowHeight * this.internalTitleRows.length : this.titleRowHeight;\r\n\r\n                titleTotalHeight += this.footerTotalHeight;\r\n\r\n                return titleTotalHeight + this.internalTableData.length * this.rowHeight + 1;\r\n            },\r\n\r\n\r\n            // 初始化width\r\n            initTableWidth(){\r\n\r\n                this.internalWidth = this.isHorizontalResize ? this.maxWidth : this.width;\r\n\r\n            },\r\n\r\n            // 当宽度设置 && 非固定列未设置宽度时（列自适应）初始化列集合\r\n            initColumns(){\r\n\r\n                this.internalHeight = this.height;\r\n\r\n                this.footerTotalHeight = this.getFooterTotalRowHeight;\r\n\r\n                this.internalColumns = Array.isArray(this.columns) ? deepClone(this.columns) : [];\r\n\r\n                this.internalTitleRows = Array.isArray(this.titleRows) ? deepClone(this.titleRows) : [];\r\n\r\n                this.initColumnsFilters();\r\n\r\n                this.initResizeColumns();\r\n\r\n                this.hasFrozenColumn = this.internalColumns.some(x => x.isFrozen);\r\n\r\n                this.initTableWidth();\r\n\r\n                this.setSortColumns();\r\n\r\n\r\n                var self = this, widthCountCheck = 0;\r\n\r\n                if (self.internalWidth && self.internalWidth > 0) {\r\n                    self.internalColumns.map(function (item) {\r\n                        if (!(item.width && item.width > 0)) {\r\n\r\n                            widthCountCheck++;\r\n                            if (self.isHorizontalResize) {\r\n                                console.error(self.errorMsg + \"If you are using the isHorizontalResize property,Please set the value for each column's width\");\r\n                            } else {\r\n                                item.width = self.internalWidth - self.totalColumnsWidth;\r\n                            }\r\n\r\n                        }\r\n                    })\r\n                }\r\n\r\n                if (widthCountCheck > 1) {\r\n                    console.error(this.errorMsg + 'Only allow one column is not set width');\r\n                }\r\n\r\n            },\r\n\r\n\r\n            // 当没设置宽度和高度时动态计算\r\n            initView(){\r\n\r\n                // 当没有设置宽度计算总宽度\r\n                if (!(this.internalWidth && this.internalWidth > 0)) {\r\n\r\n                    if (this.columns && this.columns.length > 0) {\r\n                        this.internalWidth = this.columns.reduce((total, curr) => total + curr.width, 0);\r\n\r\n                    }\r\n                }\r\n\r\n                var totalColumnsHeight = this.getTotalColumnsHeight();\r\n\r\n                // 当没有设置高度时计算总高度 || 设置的高度大于所有列高度之和时\r\n                if (!(this.height && this.height > 0) || this.height > totalColumnsHeight) {\r\n\r\n                    if (!this.isVerticalResize) {\r\n\r\n                        this.internalHeight = totalColumnsHeight;\r\n                    }\r\n\r\n                } else if (this.height <= totalColumnsHeight) {\r\n\r\n                    this.internalHeight = this.height;\r\n                }\r\n            },\r\n\r\n            initInternalTableData(){\r\n\r\n                return Array.isArray(this.tableData) ? deepClone(this.tableData) : [];\r\n            },\r\n\r\n            // 对外暴露（隐藏显示切换时）\r\n            resize(){\r\n                // fixed bug in IE9 #17\r\n                this.resizeTimer = setTimeout(x => {\r\n\r\n                    this.tableResize();\r\n                })\r\n            }\r\n        },\r\n        created(){\r\n\r\n            this.internalTableData = this.initInternalTableData(this.tableData);\r\n\r\n            if (Array.isArray(this.columns) && this.columns.length > 0) {\r\n\r\n                this.initColumns();\r\n            }\r\n\r\n            this.updateCheckboxGroupModel();\r\n\r\n            this.initView();\r\n        },\r\n        mounted(){\r\n\r\n            this.setScrollbarWidth();\r\n\r\n            this.tableEmpty();\r\n\r\n            this.tableResize();\r\n\r\n            if (Array.isArray(this.tableData) && this.tableData.length > 0) {\r\n\r\n                this.scrollControl();\r\n            }\r\n\r\n            this.controlScrollBar();\r\n        },\r\n        watch: {\r\n\r\n            // 重新跟新列信息\r\n            'columns': {\r\n                handler: function (newVal) {\r\n\r\n                    this.initColumns();\r\n                    // fix issue #261\r\n                    this.tableResize();\r\n                },\r\n                deep: true\r\n            },\r\n            // 重新覆盖复杂表头信息\r\n            'titleRows': {\r\n                handler: function (newVal) {\r\n\r\n                    this.initColumns();\r\n                },\r\n                deep: true\r\n            },\r\n\r\n            // deep watch\r\n            'tableData': {\r\n\r\n                handler: function (newVal) {\r\n\r\n                    this.skipRenderCells = [];\r\n\r\n                    this.internalTableData = this.initInternalTableData(newVal);\r\n\r\n                    this.updateCheckboxGroupModel();\r\n\r\n                    this.tableEmpty();\r\n\r\n                    if (Array.isArray(newVal) && newVal.length > 0) {\r\n\r\n                        this.initView();\r\n\r\n                        this.scrollControl();\r\n                    }\r\n\r\n                    this.resize();\r\n                },\r\n                deep: true\r\n            },\r\n            'pagingIndex': {\r\n\r\n                handler: function () {\r\n\r\n                    this.clearCurrentRow();\r\n\r\n                    this.bodyScrollTop();\r\n                }\r\n            }\r\n        },\r\n        beforeDestroy(){\r\n\r\n            clearTimeout(this.resizeTimer);\r\n        }\r\n    }\r\n</script>\r\n"],"sourceRoot":"node_modules/vue-easytable/libs/v-table/src"}]}