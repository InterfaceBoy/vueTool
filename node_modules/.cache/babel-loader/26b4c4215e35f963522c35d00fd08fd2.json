{"remainingRequest":"/Users/heyuanpeng/个人项目/ArtisticCreation/artistic-creation/node_modules/babel-loader/lib/index.js!/Users/heyuanpeng/个人项目/ArtisticCreation/artistic-creation/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/heyuanpeng/个人项目/ArtisticCreation/artistic-creation/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/heyuanpeng/个人项目/ArtisticCreation/artistic-creation/node_modules/vue-easytable/libs/v-select/src/select.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/heyuanpeng/个人项目/ArtisticCreation/artistic-creation/node_modules/vue-easytable/libs/v-select/src/select.vue","mtime":1573543942417},{"path":"/Users/heyuanpeng/个人项目/ArtisticCreation/artistic-creation/node_modules/cache-loader/dist/cjs.js","mtime":1567574739571},{"path":"/Users/heyuanpeng/个人项目/ArtisticCreation/artistic-creation/node_modules/babel-loader/lib/index.js","mtime":1565602919806},{"path":"/Users/heyuanpeng/个人项目/ArtisticCreation/artistic-creation/node_modules/cache-loader/dist/cjs.js","mtime":1567574739571},{"path":"/Users/heyuanpeng/个人项目/ArtisticCreation/artistic-creation/node_modules/vue-loader/lib/index.js","mtime":1565602921100}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport utils from \"../../src/utils/utils.js\";\nimport settings from \"../../src/settings/settings.js\";\nimport layerAdjustment from \"../../src/mixins/layerAdjustment.js\";\nimport VDropdown from \"../../v-dropdown/index\";\nexport default {\n  name: 'v-select',\n  components: {\n    VDropdown: VDropdown\n  },\n  mixins: [layerAdjustment],\n  data: function data() {\n    return {\n      visible: false,\n      internalOptions: [],\n      // 样式前缀\n      textAlignPrefix: 'v-select-items-li-a-',\n      inputValue: ''\n    };\n  },\n  props: {\n    size: {\n      type: String\n    },\n    width: {\n      type: Number,\n      default: 90\n    },\n    // select的最大宽度(超出隐藏)\n    maxWidth: {\n      type: Number\n    },\n    // 如果为true 会包含 checkbox\n    isMultiple: {\n      type: Boolean,\n      default: false\n    },\n    // 用户传入v-model 的值 [{value/label/selected}]\n    value: [Object, Array],\n    // 占位符\n    placeholder: {\n      type: String,\n      default: '请选择',\n      validator: function validator(value) {\n        return value.length > 0;\n      }\n    },\n    // 文本居中方式 left|center|right\n    textAlign: {\n      type: String,\n      default: 'left'\n    },\n    // 最小选中数量\n    min: {\n      type: Number,\n      default: 0\n    },\n    // 最大选中数量\n    max: {\n      type: Number,\n      default: 999\n    },\n    // 是否支持输入input\n    isInput: {\n      type: Boolean,\n      default: false\n    }\n  },\n  methods: {\n    // 初始化\n    init: function init() {\n      this.internalOptions = Object.assign([], this.value);\n\n      if (this.isInput) {\n        this.setInputValue();\n      }\n    },\n    // 显示选中的信息\n    showSelectInfo: function showSelectInfo() {\n      var result, labels;\n      labels = this.selectedLabels();\n\n      if (Array.isArray(labels) && labels.length > 0) {\n        result = labels.join();\n      } else {\n        result = this.placeholder;\n      }\n\n      return result;\n    },\n    // 当前选中项的label\n    selectedLabels: function selectedLabels() {\n      return this.internalOptions.filter(function (x) {\n        return x.selected;\n      }).map(function (x) {\n        if (x.selected) {\n          return x.label;\n        }\n      });\n    },\n    // dropdown change event\n    dropdownChange: function dropdownChange() {\n      // 使用户传入的v-model 生效\n      this.$emit('input', this.internalOptions);\n      this.$emit('change');\n    }\n  },\n  created: function created() {\n    this.init();\n  },\n  watch: {\n    'value': function value(val) {\n      this.init();\n    }\n  }\n};",{"version":3,"sources":["select.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <v-dropdown class=\"v-select\" v-model=\"internalOptions\"\r\n                is-select\r\n                :size=\"size\"\r\n                :style=\"{width:width}\"\r\n                :width=\"width\"\r\n                :maxWidth=\"maxWidth\"\r\n                :isMultiple=\"isMultiple\"\r\n                :textAlign=\"textAlign\"\r\n                :min=\"min\"\r\n                :max=\"max\"\r\n                :isInput=\"isInput\"\r\n                @change=\"dropdownChange\"\r\n    >\r\n            <span>\r\n                <template v-if=\"isInput\">\r\n                    <input class=\"v-select-input\" :placeholder=\"placeholder\" type=\"text\" v-model=\"inputValue\"/>\r\n                </template>\r\n                <template v-else>\r\n                    <span class=\"v-select-selected-span\">{{showSelectInfo()}}</span>\r\n                </template>\r\n                <i class=\"v-select-selected-i v-icon-down-dir\"></i>\r\n            </span>\r\n    </v-dropdown>\r\n</template>\r\n\r\n<script>\r\n    import utils from '../../src/utils/utils.js'\r\n    import settings from '../../src/settings/settings.js'\r\n    import layerAdjustment from '../../src/mixins/layerAdjustment.js'\r\n\r\n    import VDropdown from '../../v-dropdown/index'\r\n\r\n    export default {\r\n        name: 'v-select',\r\n        components: {\r\n            VDropdown\r\n        },\r\n        mixins: [layerAdjustment],\r\n        data(){\r\n            return {\r\n\r\n                visible: false,\r\n\r\n                internalOptions: [],\r\n\r\n                // 样式前缀\r\n                textAlignPrefix: 'v-select-items-li-a-',\r\n\r\n                inputValue: ''\r\n            }\r\n        },\r\n        props: {\r\n            size: {\r\n                type: String\r\n            },\r\n\r\n            width: {\r\n                type: Number,\r\n                default: 90\r\n\r\n            },\r\n\r\n            // select的最大宽度(超出隐藏)\r\n            maxWidth: {\r\n                type: Number\r\n            },\r\n\r\n            // 如果为true 会包含 checkbox\r\n            isMultiple: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n\r\n            // 用户传入v-model 的值 [{value/label/selected}]\r\n            value: [Object, Array],\r\n\r\n            // 占位符\r\n            placeholder: {\r\n                type: String,\r\n                default: '请选择',\r\n                validator: function (value) {\r\n                    return value.length > 0\r\n                }\r\n            },\r\n\r\n            // 文本居中方式 left|center|right\r\n            textAlign: {\r\n                type: String,\r\n                default: 'left'\r\n            },\r\n\r\n            // 最小选中数量\r\n            min: {\r\n                type: Number,\r\n                default: 0\r\n            },\r\n\r\n            // 最大选中数量\r\n            max: {\r\n                type: Number,\r\n                default: 999\r\n            },\r\n\r\n            // 是否支持输入input\r\n            isInput: {\r\n                type: Boolean,\r\n                default: false\r\n            }\r\n\r\n        },\r\n        methods: {\r\n\r\n            // 初始化\r\n            init(){\r\n                this.internalOptions = Object.assign([], this.value);\r\n\r\n                if (this.isInput) {\r\n\r\n                    this.setInputValue();\r\n                }\r\n            },\r\n\r\n            // 显示选中的信息\r\n            showSelectInfo(){\r\n                var result, labels;\r\n\r\n                labels = this.selectedLabels();\r\n                if (Array.isArray(labels) && labels.length > 0) {\r\n                    result = labels.join();\r\n                } else {\r\n                    result = this.placeholder;\r\n                }\r\n\r\n                return result;\r\n            },\r\n\r\n            // 当前选中项的label\r\n            selectedLabels(){\r\n\r\n                return this.internalOptions.filter(x => x.selected).map(x => {\r\n\r\n                    if (x.selected) {\r\n                        return x.label;\r\n                    }\r\n                });\r\n            },\r\n\r\n            // dropdown change event\r\n            dropdownChange(){\r\n\r\n                // 使用户传入的v-model 生效\r\n                this.$emit('input', this.internalOptions);\r\n\r\n                this.$emit('change');\r\n            }\r\n        },\r\n\r\n        created(){\r\n\r\n            this.init();\r\n        },\r\n        watch: {\r\n            'value': function (val) {\r\n                this.init();\r\n            }\r\n        }\r\n    }\r\n</script>"],"sourceRoot":"node_modules/vue-easytable/libs/v-select/src"}]}