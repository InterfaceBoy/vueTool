{"remainingRequest":"/Users/heyuanpeng/个人项目/vueTool/node_modules/babel-loader/lib/index.js!/Users/heyuanpeng/个人项目/vueTool/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/heyuanpeng/个人项目/vueTool/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/heyuanpeng/个人项目/vueTool/node_modules/vue-easytable/libs/v-dropdown/src/dropdown.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/heyuanpeng/个人项目/vueTool/node_modules/vue-easytable/libs/v-dropdown/src/dropdown.vue","mtime":1573543942417},{"path":"/Users/heyuanpeng/个人项目/vueTool/node_modules/cache-loader/dist/cjs.js","mtime":1567574739571},{"path":"/Users/heyuanpeng/个人项目/vueTool/node_modules/babel-loader/lib/index.js","mtime":1565602919806},{"path":"/Users/heyuanpeng/个人项目/vueTool/node_modules/cache-loader/dist/cjs.js","mtime":1567574739571},{"path":"/Users/heyuanpeng/个人项目/vueTool/node_modules/vue-loader/lib/index.js","mtime":1565602921100}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.array.is-array\";\nimport \"core-js/modules/es6.array.map\";\nimport \"core-js/modules/es6.array.some\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport settings from \"../../src/settings/settings.js\";\nimport clickoutside from \"../../src/directives/clickoutside.js\";\nimport VCheckboxGroup from \"../../v-checkbox-group/index\";\nimport VCheckbox from \"../../v-checkbox/index\";\nimport layerAdjustment from \"../../src/mixins/layerAdjustment.js\";\nexport default {\n  name: 'v-dropdown',\n  components: {\n    VCheckboxGroup: VCheckboxGroup,\n    VCheckbox: VCheckbox\n  },\n  mixins: [layerAdjustment],\n  directives: {\n    'click-outside': clickoutside\n  },\n  data: function data() {\n    return {\n      visible: false,\n      internalOptions: [],\n      // checkboxGroup 选中的项\n      checkboxGroupList: [],\n      // 样式前缀\n      textAlignPrefix: 'v-dropdown-items-li-a-',\n      inputValue: '',\n      // 是否有选项被改变（初始值为null 为了区分首次internalOptions 赋值的问题）\n      isOperationChange: null\n    };\n  },\n  props: {\n    // 如果是select 组件将特殊处理\n    isSelect: {\n      type: Boolean,\n      default: false\n    },\n    showOperation: {\n      type: Boolean,\n      default: false\n    },\n    size: {\n      type: String\n    },\n    width: {\n      type: Number,\n      default: 90\n    },\n    // select的最大宽度(超出隐藏)\n    maxWidth: {\n      type: Number\n    },\n    // 如果为true 会包含 checkbox\n    isMultiple: {\n      type: Boolean,\n      default: false\n    },\n    // 用户传入v-model 的值 [{value/label/selected}]\n    value: [Object, Array],\n    // 占位符\n    placeholder: {\n      type: String,\n      default: '请选择',\n      validator: function validator(value) {\n        return value.length > 0;\n      }\n    },\n    // 文本居中方式 left|center|right\n    textAlign: {\n      type: String,\n      default: 'left'\n    },\n    // 最小选中数量\n    min: {\n      type: Number,\n      default: 0\n    },\n    // 最大选中数量\n    max: {\n      type: Number,\n      default: 999\n    },\n    // 是否支持输入input\n    isInput: {\n      type: Boolean,\n      default: false\n    }\n  },\n  computed: {\n    sizeClass: function sizeClass() {\n      var size = settings.sizeMaps[this.size] || settings.sizeMapDefault;\n      return size === settings.sizeMaps['large'] ? ' v-dropdown--large' : size === settings.sizeMaps['middle'] ? ' v-dropdown--middle' : ' v-dropdown--small';\n    },\n    // 获取最大宽度(不设置则是无穷大)\n    getMaxWidth: function getMaxWidth() {\n      var result = Infinity,\n          maxWidth = this.maxWidth,\n          width = this.width;\n\n      if (maxWidth && maxWidth > 0 && maxWidth > width) {\n        result = maxWidth;\n      }\n\n      return result;\n    }\n  },\n  methods: {\n    // 初始化\n    init: function init() {\n      this.internalOptions = Object.assign([], this.value);\n      this.checkboxGroupList = this.selectedLabels();\n\n      if (this.isInput) {\n        this.setInputValue();\n      }\n    },\n    // operation filter confirm\n    confirm: function confirm() {\n      if (this.isOperationChange) {\n        this.$emit('on-filter-method', this.internalOptions);\n        this.isOperationChange = false;\n      }\n\n      this.hideDropDown();\n    },\n    // operation filter reset\n    rest: function rest() {\n      var _this = this;\n\n      if (this.internalOptions.some(function (x) {\n        return x.selected;\n      })) {\n        this.internalOptions.map(function (x) {\n          if (x.selected) {\n            x.selected = false;\n          }\n\n          return x;\n        });\n        this.checkboxGroupList = []; // 使用户传入的v-model 生效\n\n        this.$emit('input', this.internalOptions);\n        this.$emit('change'); // 修复执行两次的bug\n\n        /*this.$emit('on-filter-method',this.internalOptions);\n         this.isOperationChange = false;*/\n      }\n\n      setTimeout(function (x) {\n        _this.hideDropDown();\n      }, 50);\n    },\n    hideDropDown: function hideDropDown() {\n      if (this.showOperation && this.isOperationChange) {\n        this.$emit('on-filter-method', this.internalOptions);\n        this.isOperationChange = false;\n      }\n\n      this.visible = false;\n    },\n    showDropDown: function showDropDown() {\n      this.visible = true;\n    },\n    // 设置文本框的值\n    setInputValue: function setInputValue() {\n      var result, labels;\n      labels = this.selectedLabels();\n\n      if (Array.isArray(labels) && labels.length > 0) {\n        result = labels.join();\n      }\n\n      this.inputValue = result;\n    },\n    // checkbox 选中改变事件\n    checkboxGroupChange: function checkboxGroupChange() {\n      this.selectOptionClick();\n    },\n    toggleItems: function toggleItems() {\n      var _this2 = this;\n\n      //this.visible = !this.visible;\n      if (this.visible) {\n        this.hideDropDown();\n      } else {\n        this.showDropDown();\n        this.$nextTick(function (x) {\n          _this2.dropDownClick();\n        });\n      }\n    },\n    selectOptionClick: function selectOptionClick(item) {\n      var _this3 = this;\n\n      if (!this.isMultiple) {\n        this.internalOptions.map(function (x) {\n          if (item.label === x.label) {\n            x.selected = true;\n          } else {\n            x.selected = false;\n          }\n\n          return x;\n        });\n      } else {\n        // 多选\n        this.internalOptions.map(function (x) {\n          if (_this3.checkboxGroupList.includes(x.label)) {\n            x.selected = true;\n          } else {\n            x.selected = false;\n          }\n\n          return x;\n        });\n      }\n\n      if (!this.isMultiple) {\n        this.toggleItems();\n      }\n\n      if (this.isInput) {\n        this.setInputValue();\n      } // 使用户传入的v-model 生效\n\n\n      this.$emit('input', this.internalOptions);\n      this.$emit('change');\n    },\n    // 获取样式名称\n    getTextAlignClass: function getTextAlignClass() {\n      return this.textAlignPrefix + this.textAlign;\n    },\n    // 当前选中项的label\n    selectedLabels: function selectedLabels() {\n      return this.internalOptions.filter(function (x) {\n        return x.selected;\n      }).map(function (x) {\n        if (x.selected) {\n          return x.label;\n        }\n      });\n    },\n    clickOutside: function clickOutside() {\n      this.hideDropDown(); //this.visible = false\n    },\n    // 下拉点击显示\n    dropDownClick: function dropDownClick() {\n      var dtEle = this.$el.querySelector('.v-dropdown-dt'),\n          ddItem = this.$el.querySelector('.v-dropdown-items');\n      this.layerAdjustmentOnce(ddItem, dtEle, 2);\n      return false;\n    },\n    // 确定下拉框的位置\n    dropdownAdjust: function dropdownAdjust() {\n      var dtEle = this.$el.querySelector('.v-dropdown-dt'),\n          ddItem = this.$el.querySelector('.v-dropdown-items');\n      this.layerAdjustmentBind(ddItem, dtEle, 2);\n    }\n  },\n  created: function created() {\n    this.init();\n  },\n  mounted: function mounted() {\n    this.dropdownAdjust();\n  },\n  watch: {\n    'value': function value(val) {\n      this.init();\n    },\n    'internalOptions': function internalOptions(val) {\n      this.isOperationChange = this.showOperation && this.isOperationChange !== null ? true : false;\n    }\n  }\n};",{"version":3,"sources":["dropdown.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <dl :class=\"['v-dropdown',sizeClass]\" v-click-outside=\"clickOutside\">\r\n        <dt class=\"v-dropdown-dt\">\r\n            <a :class=\"[isSelect ? 'v-dropdown-selected' :'']\" @click.stop.prevent=\"toggleItems()\" :style=\"{'width':width+'px'}\">\r\n                <slot></slot>\r\n            </a>\r\n        </dt>\r\n        <dd v-show=\"visible\" class=\"v-dropdown-dd\">\r\n            <ul class=\"v-dropdown-items\" :style=\"{'min-width':width+'px','max-width':getMaxWidth+'px'}\">\r\n\r\n                <template v-if=\"isMultiple\">\r\n                    <v-checkbox-group is-vertical-show\r\n                                      :min=\"min\"\r\n                                      :max=\"max\"\r\n                                      @change=\"checkboxGroupChange\"\r\n                                      v-model=\"checkboxGroupList\"\r\n                    >\r\n                        <li v-for=\"item in internalOptions\"\r\n                            :class=\"['v-dropdown-items-multiple',getTextAlignClass()]\"\r\n                        >\r\n                            <v-checkbox :key=\"item.label\" :label=\"item.label\"\r\n                                        :showLine=\"item.showLine\"></v-checkbox>\r\n                        </li>\r\n                    </v-checkbox-group>\r\n                </template>\r\n                <template v-else>\r\n                    <li v-for=\"item in internalOptions\" @click.stop=\"selectOptionClick(item)\"\r\n                        :class=\"['v-dropdown-items-li',item.selected ? 'active' : '']\">\r\n                        <a :class=\"['v-dropdown-items-li-a',getTextAlignClass()]\" href=\"javascript:void(0);\">{{item.label}}</a>\r\n                    </li>\r\n                </template>\r\n\r\n                <li v-if=\"showOperation\" class=\"v-dropdown-operation\">\r\n                    <a @click.stop=\"confirm\" class=\"v-dropdown-operation-item\" href=\"javascript:void(0)\">确认</a>\r\n                    <a @click.stop=\"rest\" class=\"v-dropdown-operation-item\" href=\"javascript:void(0)\">重置</a>\r\n                </li>\r\n            </ul>\r\n        </dd>\r\n    </dl>\r\n</template>\r\n\r\n<script>\r\n    import settings from '../../src/settings/settings.js'\r\n    import clickoutside from '../../src/directives/clickoutside.js'\r\n\r\n    import VCheckboxGroup from '../../v-checkbox-group/index'\r\n    import VCheckbox from '../../v-checkbox/index'\r\n\r\n    import layerAdjustment from '../../src/mixins/layerAdjustment.js'\r\n\r\n    export default {\r\n        name: 'v-dropdown',\r\n        components: {\r\n            VCheckboxGroup, VCheckbox\r\n        },\r\n        mixins: [layerAdjustment],\r\n        directives: {\r\n            'click-outside': clickoutside\r\n        },\r\n        data(){\r\n            return {\r\n\r\n                visible: false,\r\n\r\n                internalOptions: [],\r\n\r\n                // checkboxGroup 选中的项\r\n                checkboxGroupList: [],\r\n\r\n                // 样式前缀\r\n                textAlignPrefix: 'v-dropdown-items-li-a-',\r\n\r\n                inputValue: '',\r\n\r\n                // 是否有选项被改变（初始值为null 为了区分首次internalOptions 赋值的问题）\r\n                isOperationChange:null\r\n            }\r\n        },\r\n        props: {\r\n            // 如果是select 组件将特殊处理\r\n            isSelect:{\r\n                type:Boolean,\r\n                default:false\r\n            },\r\n            showOperation:{\r\n                type:Boolean,\r\n                default:false\r\n            },\r\n            size: {\r\n                type: String\r\n            },\r\n\r\n            width: {\r\n                type: Number,\r\n                default: 90\r\n\r\n            },\r\n\r\n            // select的最大宽度(超出隐藏)\r\n            maxWidth: {\r\n                type: Number\r\n            },\r\n\r\n            // 如果为true 会包含 checkbox\r\n            isMultiple: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n\r\n            // 用户传入v-model 的值 [{value/label/selected}]\r\n            value: [Object, Array],\r\n\r\n            // 占位符\r\n            placeholder: {\r\n                type: String,\r\n                default: '请选择',\r\n                validator: function (value) {\r\n                    return value.length > 0\r\n                }\r\n            },\r\n\r\n            // 文本居中方式 left|center|right\r\n            textAlign: {\r\n                type: String,\r\n                default: 'left'\r\n            },\r\n\r\n            // 最小选中数量\r\n            min: {\r\n                type: Number,\r\n                default: 0\r\n            },\r\n\r\n            // 最大选中数量\r\n            max: {\r\n                type: Number,\r\n                default: 999\r\n            },\r\n\r\n            // 是否支持输入input\r\n            isInput: {\r\n                type: Boolean,\r\n                default: false\r\n            }\r\n\r\n        },\r\n        computed: {\r\n\r\n            sizeClass(){\r\n                let size = settings.sizeMaps[this.size] || settings.sizeMapDefault\r\n                return size === settings.sizeMaps['large'] ? ' v-dropdown--large' : (size === settings.sizeMaps['middle'] ? ' v-dropdown--middle' : ' v-dropdown--small')\r\n            },\r\n\r\n            // 获取最大宽度(不设置则是无穷大)\r\n            getMaxWidth(){\r\n                var result = Infinity,\r\n                    maxWidth = this.maxWidth,\r\n                    width = this.width;\r\n\r\n                if (maxWidth && maxWidth > 0 && maxWidth > width) {\r\n\r\n                    result = maxWidth;\r\n                }\r\n\r\n                return result;\r\n            }\r\n        },\r\n        methods: {\r\n\r\n            // 初始化\r\n            init(){\r\n                this.internalOptions = Object.assign([], this.value);\r\n\r\n                this.checkboxGroupList = this.selectedLabels();\r\n\r\n                if (this.isInput) {\r\n\r\n                    this.setInputValue();\r\n                }\r\n            },\r\n\r\n            // operation filter confirm\r\n            confirm(){\r\n\r\n                if (this.isOperationChange){\r\n\r\n                    this.$emit('on-filter-method',this.internalOptions);\r\n                    this.isOperationChange = false;\r\n                }\r\n                this.hideDropDown();\r\n            },\r\n\r\n            // operation filter reset\r\n            rest(){\r\n\r\n                if (this.internalOptions.some(x=>x.selected)){\r\n\r\n                    this.internalOptions.map(x=>{\r\n\r\n                        if (x.selected){\r\n                            x.selected = false;\r\n                        }\r\n                        return x;\r\n                    })\r\n\r\n                    this.checkboxGroupList = [];\r\n\r\n                    // 使用户传入的v-model 生效\r\n                    this.$emit('input', this.internalOptions);\r\n\r\n                    this.$emit('change');\r\n\r\n                    // 修复执行两次的bug\r\n                    /*this.$emit('on-filter-method',this.internalOptions);\r\n\r\n                    this.isOperationChange = false;*/\r\n                }\r\n\r\n                setTimeout(x=>{\r\n\r\n                    this.hideDropDown();\r\n                },50)\r\n            },\r\n\r\n            hideDropDown(){\r\n\r\n                if (this.showOperation && this.isOperationChange){\r\n\r\n                    this.$emit('on-filter-method',this.internalOptions);\r\n                    this.isOperationChange = false;\r\n                }\r\n\r\n                this.visible = false;\r\n            },\r\n\r\n            showDropDown(){\r\n\r\n                this.visible = true;\r\n            },\r\n\r\n            // 设置文本框的值\r\n            setInputValue(){\r\n\r\n                var result, labels;\r\n\r\n                labels = this.selectedLabels();\r\n                if (Array.isArray(labels) && labels.length > 0) {\r\n                    result = labels.join();\r\n                }\r\n\r\n                this.inputValue = result;\r\n            },\r\n\r\n            // checkbox 选中改变事件\r\n            checkboxGroupChange(){\r\n\r\n                this.selectOptionClick();\r\n            },\r\n\r\n            toggleItems(){\r\n\r\n                //this.visible = !this.visible;\r\n\r\n                if (this.visible) {\r\n\r\n                    this.hideDropDown();\r\n\r\n                }else{\r\n\r\n                    this.showDropDown();\r\n\r\n                    this.$nextTick(x => {\r\n                        this.dropDownClick()\r\n                    })\r\n                }\r\n            },\r\n\r\n            selectOptionClick(item){\r\n                if (!this.isMultiple) {\r\n                    this.internalOptions.map((x) => {\r\n\r\n                        if (item.label === x.label) {\r\n                            x.selected = true;\r\n                        } else {\r\n                            x.selected = false;\r\n                        }\r\n                        return x;\r\n                    })\r\n                } else { // 多选\r\n                    this.internalOptions.map((x) => {\r\n\r\n                        if (this.checkboxGroupList.includes(x.label)) {\r\n                            x.selected = true;\r\n                        } else {\r\n                            x.selected = false;\r\n                        }\r\n                        return x;\r\n                    })\r\n                }\r\n\r\n                if (!this.isMultiple) {\r\n                    this.toggleItems();\r\n                }\r\n\r\n                if (this.isInput) {\r\n\r\n                    this.setInputValue();\r\n                }\r\n\r\n                // 使用户传入的v-model 生效\r\n                this.$emit('input', this.internalOptions);\r\n\r\n                this.$emit('change');\r\n            },\r\n\r\n            // 获取样式名称\r\n            getTextAlignClass(){\r\n\r\n                return this.textAlignPrefix + this.textAlign;\r\n\r\n            },\r\n\r\n            // 当前选中项的label\r\n            selectedLabels(){\r\n\r\n                return this.internalOptions.filter(x => x.selected).map(x => {\r\n\r\n                    if (x.selected) {\r\n                        return x.label;\r\n                    }\r\n                });\r\n            },\r\n\r\n            clickOutside(){\r\n\r\n                this.hideDropDown();\r\n                //this.visible = false\r\n            },\r\n\r\n            // 下拉点击显示\r\n            dropDownClick(){\r\n\r\n                var dtEle = this.$el.querySelector('.v-dropdown-dt'),\r\n                    ddItem = this.$el.querySelector('.v-dropdown-items');\r\n                this.layerAdjustmentOnce(ddItem, dtEle, 2);\r\n                return false;\r\n            },\r\n\r\n            // 确定下拉框的位置\r\n            dropdownAdjust(){\r\n\r\n                var dtEle = this.$el.querySelector('.v-dropdown-dt'),\r\n                    ddItem = this.$el.querySelector('.v-dropdown-items');\r\n                this.layerAdjustmentBind(ddItem, dtEle, 2);\r\n            }\r\n\r\n        },\r\n\r\n        created(){\r\n\r\n            this.init();\r\n        },\r\n        mounted(){\r\n\r\n            this.dropdownAdjust();\r\n\r\n        },\r\n        watch: {\r\n            'value': function (val) {\r\n                this.init();\r\n            },\r\n            'internalOptions':function (val) {\r\n\r\n                this.isOperationChange = (this.showOperation && this.isOperationChange !== null) ? true :false;\r\n            }\r\n        }\r\n    }\r\n</script>"],"sourceRoot":"node_modules/vue-easytable/libs/v-dropdown/src"}]}