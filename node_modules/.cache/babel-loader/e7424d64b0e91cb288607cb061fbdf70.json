{"remainingRequest":"/Users/heyuanpeng/个人项目/vueTool/node_modules/babel-loader/lib/index.js!/Users/heyuanpeng/个人项目/vueTool/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/heyuanpeng/个人项目/vueTool/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/heyuanpeng/个人项目/vueTool/src/views/Attempt/SummaryVue/LiQuorTree/liQuorTree.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/heyuanpeng/个人项目/vueTool/src/views/Attempt/SummaryVue/LiQuorTree/liQuorTree.vue","mtime":1574824361619},{"path":"/Users/heyuanpeng/个人项目/vueTool/node_modules/cache-loader/dist/cjs.js","mtime":1567574739571},{"path":"/Users/heyuanpeng/个人项目/vueTool/node_modules/babel-loader/lib/index.js","mtime":1565602919806},{"path":"/Users/heyuanpeng/个人项目/vueTool/node_modules/cache-loader/dist/cjs.js","mtime":1567574739571},{"path":"/Users/heyuanpeng/个人项目/vueTool/node_modules/vue-loader/lib/index.js","mtime":1565602921100}],"contextDependencies":[],"result":["import _toConsumableArray from \"/Users/heyuanpeng/\\u4E2A\\u4EBA\\u9879\\u76EE/vueTool/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\nimport \"core-js/modules/es6.array.map\";\nimport \"core-js/modules/es6.array.filter\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/heyuanpeng/\\u4E2A\\u4EBA\\u9879\\u76EE/vueTool/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport LiquorTree from \"liquor-tree\";\nimport { convertTreeArray } from \"@/utils/base\";\nimport { getRegionBaseList, getRegionBaseSearch } from \"@/api\";\nexport default {\n  props: {},\n  data: function data() {\n    return {\n      iconDown: \"ios-arrow-back\",\n      value: [],\n      text: \"\",\n      isActive: 0,\n      liQuortreeShow: false,\n      treeData2: [],\n      treeOptions2: {\n        checkbox: true,\n        filter: {\n          plainList: true\n        },\n        fetchData: function () {\n          var _fetchData = _asyncToGenerator(\n          /*#__PURE__*/\n          regeneratorRuntime.mark(function _callee(node) {\n            var res;\n            return regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.next = 2;\n                    return getRegionBaseList(node.data.value);\n\n                  case 2:\n                    res = _context.sent;\n                    return _context.abrupt(\"return\", convertTreeArray(res));\n\n                  case 4:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee);\n          }));\n\n          function fetchData(_x) {\n            return _fetchData.apply(this, arguments);\n          }\n\n          return fetchData;\n        }()\n      },\n      treeFilter2: \"\",\n      SelectionArray: [],\n      searchListModel: \"\",\n      searchListModelArray: [],\n      searchListData: \"\",\n      searchLoading: false,\n      searchSwitchtree: false,\n      searchSelectedActive: false,\n      //\n      searchEcho: {\n        text: [],\n        value: []\n      },\n      //\n      treeEcho: {\n        text: [],\n        value: []\n      }\n    };\n  },\n  computed: {\n    // 表格树数据\n    tableTreeData: function tableTreeData() {\n      var data = convertTreeArray(this.treeData2);\n      return data;\n    }\n  },\n  created: function created() {},\n  mounted: function () {\n    var _mounted = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee2() {\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return getRegionBaseList(-1);\n\n            case 2:\n              this.treeData2 = _context2.sent;\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    function mounted() {\n      return _mounted.apply(this, arguments);\n    }\n\n    return mounted;\n  }(),\n  watch: {},\n  methods: {\n    handleIconClick: function handleIconClick() {\n      this.liQuortreeShow ? (this.iconDown = \"ios-arrow-back\", this.liQuortreeShow = false) : (this.iconDown = \"ios-arrow-down\", this.liQuortreeShow = true);\n    },\n    // 点击首层input框\n    handleFocus: function handleFocus() {\n      this.liQuortreeShow ? 0 : (this.iconDown = \"ios-arrow-down\", this.liQuortreeShow = true);\n    },\n\n    /* 搜索功能点击list */\n    handleListClick: function handleListClick(id, data) {\n      var name = data.currentTarget.innerHTML;\n      data.currentTarget.style.background = \"#eee\"; // 第一次筛选：选出当前数组中相同的数据\n\n      var s = this.searchListModelArray.filter(function (item) {\n        return item.value === id;\n      }); // 第二次筛选：数组去重，并取消list选中状态\n\n      if (s.length) {\n        this.searchListModelArray = this.searchListModelArray.filter(function (item) {\n          return item.value !== id;\n        });\n        data.currentTarget.style.background = \"#fff\";\n      } else {\n        this.searchListModelArray.push({\n          text: name,\n          value: id\n        });\n      } // 回显数据拼接\n\n\n      var echoDisplay = this.searchListModelArray.map(function (item) {\n        return item.text;\n      });\n      var echoId = this.searchListModelArray.map(function (item) {\n        return item.value;\n      });\n      this.searchEcho = {\n        text: echoDisplay,\n        value: echoId\n      };\n      this.text = [].concat(_toConsumableArray(this.treeEcho.text), _toConsumableArray(this.searchEcho.text)).toString();\n      this.value = [].concat(_toConsumableArray(this.treeEcho.value), _toConsumableArray(this.searchEcho.value));\n    },\n    // 开启搜索功能\n    handleSearchMethod: function () {\n      var _handleSearchMethod = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3(searchText) {\n        var res;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.searchSwitchtree = true;\n\n                if (!searchText) {\n                  _context3.next = 16;\n                  break;\n                }\n\n                this.searchLoading = true;\n                _context3.prev = 3;\n                _context3.next = 6;\n                return getRegionBaseSearch(0, 30, searchText);\n\n              case 6:\n                res = _context3.sent;\n                this.searchListData = res.data;\n                this.searchLoading = false;\n                _context3.next = 14;\n                break;\n\n              case 11:\n                _context3.prev = 11;\n                _context3.t0 = _context3[\"catch\"](3);\n                console.log(_context3.t0);\n\n              case 14:\n                _context3.next = 18;\n                break;\n\n              case 16:\n                this.searchListData = [];\n                this.searchSwitchtree = false;\n\n              case 18:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[3, 11]]);\n      }));\n\n      function handleSearchMethod(_x2) {\n        return _handleSearchMethod.apply(this, arguments);\n      }\n\n      return handleSearchMethod;\n    }(),\n    // tree的点击（多选选中）\n    handleNodeChecked: function handleNodeChecked() {\n      this.SelectionArray = this.$refs.treeRef.findAll({\n        state: {\n          checked: true\n        }\n      }).map(function (element) {\n        return {\n          text: element.data.text,\n          value: element.data.value\n        };\n      });\n      var treeEchoText = this.SelectionArray.map(function (item) {\n        return item.text;\n      });\n      var treeEchoValue = this.SelectionArray.map(function (item) {\n        return item.value;\n      });\n      this.treeEcho = {\n        text: treeEchoText,\n        value: treeEchoValue\n      };\n      this.text = [].concat(_toConsumableArray(this.searchEcho.text), _toConsumableArray(this.treeEcho.text)).toString();\n      this.value = [].concat(_toConsumableArray(this.searchEcho.value), _toConsumableArray(this.treeEcho.value));\n    },\n    // 多选选中取消\n    handleNodeUnchecked: function handleNodeUnchecked(data) {\n      this.SelectionArray = this.SelectionArray.filter(function (element) {\n        return element.value !== data.data.value;\n      });\n      this.text = this.SelectionArray.map(function (item) {\n        return item.text;\n      }).toString();\n      this.value = this.SelectionArray.map(function (item) {\n        return item.value;\n      });\n    }\n  },\n  components: {\n    LiquorTree: LiquorTree\n  }\n};",{"version":3,"sources":["liQuorTree.vue"],"names":[],"mappings":"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","sourcesContent":["<!--\n * @Author: 何元鹏\n * @Date: 2019-10-10 10:54:54\n * @LastEditors: 何元鹏\n * @LastEditTime: 2019-10-23 15:30:01\n * @Description: file content\n -->\n<template>\n  <div class=\"li-quor-Tree\">\n    <div class=\"search\">\n      <Input\n        v-model=\"text\"\n        :icon=\"iconDown\"\n        :id=\"value\"\n        @on-focus=\"handleFocus\"\n        @on-click=\"handleIconClick\"\n      />\n      <!-- <Icon type=\"ios-arrow-back\" /> -->\n    </div>\n    <div class=\"example\" v-if=\"liQuortreeShow\">\n      <div class=\"example-description\">\n        <Input\n          type=\"text\"\n          search\n          placeholder=\"请输入搜索内容\"\n          v-model=\"searchListModel\"\n          @on-search=\"handleSearchMethod\"\n        />\n      </div>\n      <div class=\"example-tree\">\n        <Spin v-if=\"searchLoading\" :fix=\"true\"></Spin>\n        <ul class=\"search-list\" v-if=\"searchSwitchtree\">\n          <li\n            v-for=\"(option, index) in searchListData\"\n            :key=\"index\"\n            :value=\"option.id\"\n            :class=\"{caterv:option.id ===isActive,searchSelected:searchSelectedActive}\"\n            @click=\"handleListClick(option.id,$event)\"\n          >{{option.attrs.attrs.qymc.name}}</li>\n        </ul>\n        <LiquorTree\n          v-else\n          ref=\"treeRef\"\n          :data=\"tableTreeData\"\n          :filter=\"treeFilter2\"\n          :options=\"treeOptions2\"\n          @node:checked=\"handleNodeChecked\"\n          @node:unchecked=\"handleNodeUnchecked\"\n        >\n          <div slot-scope=\"{ node }\" class=\"node-container\" @mouseup.stop=\"stopTree\">\n            <div class=\"node-text\">{{ node.text }}</div>\n          </div>\n        </LiquorTree>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport LiquorTree from \"liquor-tree\";\nimport { convertTreeArray } from \"@/utils/base\";\nimport { getRegionBaseList, getRegionBaseSearch } from \"@/api\";\nexport default {\n  props: {},\n  data() {\n    return {\n      iconDown: \"ios-arrow-back\",\n      value: [],\n      text: \"\",\n      isActive: 0,\n      liQuortreeShow: false,\n      treeData2: [],\n      treeOptions2: {\n        checkbox: true,\n        filter: {\n          plainList: true\n        },\n        async fetchData(node) {\n          const res = await getRegionBaseList(node.data.value);\n          return convertTreeArray(res);\n        }\n      },\n      treeFilter2: \"\",\n      SelectionArray: [],\n      searchListModel: \"\",\n      searchListModelArray: [],\n      searchListData: \"\",\n      searchLoading: false,\n      searchSwitchtree: false,\n      searchSelectedActive: false,\n      //\n      searchEcho: {\n        text: [],\n        value: []\n      },\n      //\n      treeEcho: {\n        text: [],\n        value: []\n      }\n    };\n  },\n  computed: {\n    // 表格树数据\n    tableTreeData() {\n      let data = convertTreeArray(this.treeData2);\n      return data;\n    }\n  },\n  created() {},\n  async mounted() {\n    this.treeData2 = await getRegionBaseList(-1);\n  },\n  watch: {},\n  methods: {\n    handleIconClick() {\n      this.liQuortreeShow\n        ? ((this.iconDown = \"ios-arrow-back\"), (this.liQuortreeShow = false))\n        : ((this.iconDown = \"ios-arrow-down\"), (this.liQuortreeShow = true));\n    },\n    // 点击首层input框\n    handleFocus() {\n      this.liQuortreeShow\n        ? 0\n        : ((this.iconDown = \"ios-arrow-down\"), (this.liQuortreeShow = true));\n    },\n    /* 搜索功能点击list */\n    handleListClick(id, data) {\n      let name = data.currentTarget.innerHTML;\n      data.currentTarget.style.background = \"#eee\";\n      // 第一次筛选：选出当前数组中相同的数据\n      let s = this.searchListModelArray.filter(item => {\n        return item.value === id;\n      });\n      // 第二次筛选：数组去重，并取消list选中状态\n      if (s.length) {\n        this.searchListModelArray = this.searchListModelArray.filter(item => {\n          return item.value !== id;\n        });\n        data.currentTarget.style.background = \"#fff\";\n      } else {\n        this.searchListModelArray.push({ text: name, value: id });\n      }\n      // 回显数据拼接\n      let echoDisplay = this.searchListModelArray.map(item => {\n        return item.text;\n      });\n      let echoId = this.searchListModelArray.map(item => {\n        return item.value;\n      });\n      this.searchEcho = { text: echoDisplay, value: echoId };\n      this.text = [...this.treeEcho.text, ...this.searchEcho.text].toString();\n      this.value = [...this.treeEcho.value, ...this.searchEcho.value];\n    },\n    // 开启搜索功能\n    async handleSearchMethod(searchText) {\n      this.searchSwitchtree = true;\n      if (searchText) {\n        this.searchLoading = true;\n        try {\n          const res = await getRegionBaseSearch(0, 30, searchText);\n          this.searchListData = res.data;\n          this.searchLoading = false;\n        } catch (error) {\n          console.log(error);\n        }\n      } else {\n        this.searchListData = [];\n        this.searchSwitchtree = false;\n      }\n    },\n    // tree的点击（多选选中）\n    handleNodeChecked() {\n      this.SelectionArray = this.$refs.treeRef\n        .findAll({\n          state: { checked: true }\n        })\n        .map(element => {\n          return { text: element.data.text, value: element.data.value };\n        });\n      let treeEchoText = this.SelectionArray.map(item => {\n        return item.text;\n      });\n      let treeEchoValue = this.SelectionArray.map(item => {\n        return item.value;\n      });\n      this.treeEcho = {\n        text: treeEchoText,\n        value: treeEchoValue\n      };\n      this.text = [...this.searchEcho.text, ...this.treeEcho.text].toString();\n      this.value = [...this.searchEcho.value, ...this.treeEcho.value];\n    },\n    // 多选选中取消\n    handleNodeUnchecked(data) {\n      this.SelectionArray = this.SelectionArray.filter(element => {\n        return element.value !== data.data.value;\n      });\n      this.text = this.SelectionArray.map(item => {\n        return item.text;\n      }).toString();\n      this.value = this.SelectionArray.map(item => {\n        return item.value;\n      });\n    }\n  },\n  components: {\n    LiquorTree\n  }\n};\n</script>\n\n<style scoped lang=\"scss\">\n.li-quor-Tree {\n  width: 24rem;\n  height: 100%;\n  flex-basis: 49%;\n  .example {\n    box-sizing: border-box;\n    border: 1px solid #eee;\n    margin-top: 5px;\n    .example-tree {\n      position: absolute;\n      width: 100%;\n      height: 20rem;\n      overflow-x: hidden;\n      overflow-y: auto;\n    }\n    .search-list {\n      li {\n        padding: 0.5rem 1rem;\n        cursor: pointer;\n        &:hover {\n          background-color: #f7f2e7;\n        }\n      }\n      .caterv {\n        background-color: #f7f2e7;\n      }\n      .searchSelected {\n        background-color: #eee;\n      }\n    }\n    .example-description {\n      width: 90%;\n      margin: 1rem auto;\n    }\n  }\n}\n\n.tree-highlights .tree-node.matched > .tree-content {\n  background: #f7f2e7;\n}\n\n.node-info {\n  display: flex;\n  width: 100%;\n  justify-content: space-between;\n}\n</style>\n"],"sourceRoot":"src/views/Attempt/SummaryVue/LiQuorTree"}]}