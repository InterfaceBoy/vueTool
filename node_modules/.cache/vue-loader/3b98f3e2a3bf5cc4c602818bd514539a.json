{"remainingRequest":"/Users/heyuanpeng/个人项目/vueTool/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/heyuanpeng/个人项目/vueTool/src/views/Attempt/SummaryEs/javaScript.vue?vue&type=style&index=0&id=2fdc7438&scoped=true&lang=scss&","dependencies":[{"path":"/Users/heyuanpeng/个人项目/vueTool/src/views/Attempt/SummaryEs/javaScript.vue","mtime":1584323663212},{"path":"/Users/heyuanpeng/个人项目/vueTool/node_modules/css-loader/index.js","mtime":1567574744060},{"path":"/Users/heyuanpeng/个人项目/vueTool/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1565602921100},{"path":"/Users/heyuanpeng/个人项目/vueTool/node_modules/postcss-loader/src/index.js","mtime":1565602920420},{"path":"/Users/heyuanpeng/个人项目/vueTool/node_modules/sass-loader/dist/cjs.js","mtime":1567576321585},{"path":"/Users/heyuanpeng/个人项目/vueTool/node_modules/cache-loader/dist/cjs.js","mtime":1567574739571},{"path":"/Users/heyuanpeng/个人项目/vueTool/node_modules/vue-loader/lib/index.js","mtime":1565602921100}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.javaScript {\n  padding: 5rem 2rem 0;\n  ul {\n    li {\n      list-style-type: none;\n      padding: 1rem 0;\n    }\n  }\n}\n",{"version":3,"sources":["javaScript.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0NA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"javaScript.vue","sourceRoot":"src/views/Attempt/SummaryEs","sourcesContent":["<!--\n * @Author: 何元鹏\n * @Date: 2019-09-04 15:16:47\n * @LastEditors: 何元鹏\n * @LastEditTime: 2020-03-16 09:54:23\n * @Description: file content\n -->\n<template>\n  <div class=\"javaScript\">\n    <h1>javaScript</h1>\n    <ul>\n      <li @click=\"testFunction\">1、判断JavaScript数据类型</li>\n      <li @click=\"testImplicit\">2、隐式类型转换以及转换原则</li>\n      <li @click=\"testCall\">3、call函数使用</li>\n      <li>\n        4、随机抽奖(在50名观众中抽取5名幸运者)\n        <Button type=\"primary\" shape=\"circle\" @click=\"logoGo\">GO</Button>\n        <div v-for=\"(item,index) in prizeWinner\" :key=\"index\">\n          <span>{{item}}</span>\n        </div>\n      </li>\n      <li>\n        5、去掉字符串中间的空格\n        <Button type=\"primary\" shape=\"circle\" @click=\"handleBlankSpace\">GO</Button>\n        <div>{{blankSpace}}</div>\n      </li>\n      <li>\n        6、去除字符串中最后一个指定的字符\n        <Button type=\"primary\" shape=\"circle\" @click=\"handleLastSpace\">GO</Button>\n        <div>{{lastSpace}}</div>\n      </li>\n      <button @click=\"ces\">11111</button>\n      <button @click=\"ces1\">我在做题</button>\n    </ul>\n    <div></div>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {},\n  data() {\n    return {\n      // 获奖者\n      prizeWinner: [],\n      // 带空格字符串\n      blankSpace: \"    带    空 格字    符   串   \",\n      // 问句字符串\n      lastSpace: \"是帅小伙吗？\"\n    };\n  },\n  computed: {},\n  created() {},\n  mounted() {},\n  watch: {},\n  methods: {\n    testFunction() {\n      //   判断\n      console.log(\n        typeof 1, // number\n        typeof \"1\", // string\n        typeof true, // boolean\n        typeof undefined, // undefined\n        typeof null //  object\n      );\n      let obj = {};\n      obj instanceof Object; // true\n\n      let arr = [];\n      arr instanceof Array; // true\n\n      let now = new Date();\n      now instanceof Date; // true\n\n      let func = function() {};\n      func instanceof Function; // true\n\n      let str = \"string\";\n      let PDstr = str instanceof String; // false\n      console.log(PDstr);\n\n      let num1 = 1;\n      let num2 = new Number(1);\n      let numB = Object.prototype.toString.call(num1) == \"[object Number]\"; // true\n      Object.prototype.toString.call(num2) == \"[object Number]\"; // true\n      console.log(numB);\n      let att = [];\n      Object.prototype.toString.call(att) == \"[object Array]\"; // true\n\n      let attf = function() {};\n      let attfFn = Object.prototype.toString.call(attf) == \"[object Function]\"; // true\n      console.log(attfFn);\n\n      function A() {}\n      let a = new A();\n      Object.prototype.toString.call(a) == \"[object Object]\"; // true\n\n      console.log(\"constructor\", [].constructor === Array);\n      console.log({}.constructor === Object);\n      console.log(\"string\".constructor === String);\n      console.log((123).constructor === Number);\n      console.log(true.constructor === Boolean);\n    },\n    testImplicit() {\n      let test;\n      test = null;\n      if (!test) {\n        console.log(\"非空字符串会转换成true，空字符串会转换成false\", !test);\n      }\n      test = \"\";\n      if (!test) {\n        console.log(\"''和null都是空字符串\", !test);\n      }\n      test = 0;\n      if (!test) {\n        console.log(\"非0会转换成true，0会转换成false\", !test);\n      }\n      test = {};\n      if (test) {\n        console.log(\"任何对象都会转成true\", !test);\n      }\n    },\n    testCall() {\n      const sum = function sum(a, b) {\n        return a + b;\n      };\n\n      const sumByCall = function(a, b) {\n        return sum.call(this, a, b);\n      };\n\n      const sumByApply = function(a, b) {\n        return sum.apply(this, [a, b]);\n      };\n\n      const sumByApplyArguments = function(a, b) {\n        console.log(a, b);\n        return sum.apply(this, arguments);\n      };\n      console.log(\"sum 求和\", sum(2, 7));\n      console.log(\"sumByCall 求和\", sumByCall(2, 7));\n      console.log(\"sumByApply 求和\", sumByApply(2, 7));\n      console.log(\"sumByApplyArguments 求和\", sumByApplyArguments(2, 7));\n    },\n    logoGo() {\n      function buildArray(arr, length, min, max) {\n        let num = Math.max(min, Math.ceil(Math.random() * max));\n        if (!arr.includes(num)) {\n          arr.push(num);\n        }\n        return arr.length === length ? arr : buildArray(arr, length, min, max);\n      }\n      let result = buildArray([], 5, 0, 50);\n      console.table(result);\n      this.prizeWinner = result;\n    },\n    handleBlankSpace() {\n      function trim(str) {\n        let reg = /\\s+/g,\n          trimStr;\n        if (typeof str === \"string\") {\n          trimStr = str.replace(reg, \"\");\n        }\n        return trimStr;\n      }\n      this.blankSpace = trim(this.blankSpace);\n    },\n    handleLastSpace() {\n      let reg = new RegExp(`${\"吗\"}(?=([^${\"吗\"}]*)$)`);\n      this.lastSpace = this.lastSpace.replace(reg, \"\");\n      return this.lastSpace;\n    },\n    ces() {\n      let a = 1,\n        b = 2,\n        c = 6;\n      if (a === 1 && b === 2 && c !== 3) {\n        console.log(\"c=3\");\n      } else if (a !== 1 && b === 2 && c === 3) {\n        console.log(\"a=1\");\n      } else if (a === 1 && b !== 2 && c === 3) {\n        console.log(\"b=2\");\n      }\n\n      const shuzhi =\n        (a === 1 && b === 2 && c !== 3 && \"111\") ||\n        (a !== 1 && b === 2 && c === 3 && \"222\") ||\n        (a === 1 && b !== 2 && c === 3 && \"333\");\n      console.log(shuzhi);\n    },\n    ces1() {\n      let arrayCes = [\n        { id: 1, caption: \"颜色\", types: [\"黑\", \"灰\"] },\n        { id: 2, caption: \"材质\", types: [\"猪皮\"] },\n        { id: 3, caption: \"大小\", types: [\"23\", \"34\"] }\n      ];\n      let a = [];\n      const result = arrayCes.reduce((accumulator, item, index) => {\n        console.log(accumulator, item, index);\n        let s;\n        for (let i = 0; item.types.length > i; i++) {\n          s = {\n            // ...accumulator,\n            [item.id]: item.types[i]\n          };\n          a.push(s);\n        }\n        return a;\n      }, {});\n\n      console.log(result);\n    }\n  },\n  components: {}\n};\n</script>\n\n<style scoped lang=\"scss\">\n.javaScript {\n  padding: 5rem 2rem 0;\n  ul {\n    li {\n      list-style-type: none;\n      padding: 1rem 0;\n    }\n  }\n}\n</style>\n"]}]}