{"remainingRequest":"/Users/heyuanpeng/个人项目/vueTool/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/heyuanpeng/个人项目/vueTool/src/views/Attempt/SummaryVue/LiQuorTree/liQuorTree.vue?vue&type=style&index=0&id=1768cf9c&scoped=true&lang=scss&","dependencies":[{"path":"/Users/heyuanpeng/个人项目/vueTool/src/views/Attempt/SummaryVue/LiQuorTree/liQuorTree.vue","mtime":1574824361619},{"path":"/Users/heyuanpeng/个人项目/vueTool/node_modules/css-loader/index.js","mtime":1567574744060},{"path":"/Users/heyuanpeng/个人项目/vueTool/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1565602921100},{"path":"/Users/heyuanpeng/个人项目/vueTool/node_modules/postcss-loader/src/index.js","mtime":1565602920420},{"path":"/Users/heyuanpeng/个人项目/vueTool/node_modules/sass-loader/dist/cjs.js","mtime":1567576321585},{"path":"/Users/heyuanpeng/个人项目/vueTool/node_modules/cache-loader/dist/cjs.js","mtime":1567574739571},{"path":"/Users/heyuanpeng/个人项目/vueTool/node_modules/vue-loader/lib/index.js","mtime":1565602921100}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.li-quor-Tree {\n  width: 24rem;\n  height: 100%;\n  flex-basis: 49%;\n  .example {\n    box-sizing: border-box;\n    border: 1px solid #eee;\n    margin-top: 5px;\n    .example-tree {\n      position: absolute;\n      width: 100%;\n      height: 20rem;\n      overflow-x: hidden;\n      overflow-y: auto;\n    }\n    .search-list {\n      li {\n        padding: 0.5rem 1rem;\n        cursor: pointer;\n        &:hover {\n          background-color: #f7f2e7;\n        }\n      }\n      .caterv {\n        background-color: #f7f2e7;\n      }\n      .searchSelected {\n        background-color: #eee;\n      }\n    }\n    .example-description {\n      width: 90%;\n      margin: 1rem auto;\n    }\n  }\n}\n\n.tree-highlights .tree-node.matched > .tree-content {\n  background: #f7f2e7;\n}\n\n.node-info {\n  display: flex;\n  width: 100%;\n  justify-content: space-between;\n}\n",{"version":3,"sources":["liQuorTree.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"liQuorTree.vue","sourceRoot":"src/views/Attempt/SummaryVue/LiQuorTree","sourcesContent":["<!--\n * @Author: 何元鹏\n * @Date: 2019-10-10 10:54:54\n * @LastEditors: 何元鹏\n * @LastEditTime: 2019-10-23 15:30:01\n * @Description: file content\n -->\n<template>\n  <div class=\"li-quor-Tree\">\n    <div class=\"search\">\n      <Input\n        v-model=\"text\"\n        :icon=\"iconDown\"\n        :id=\"value\"\n        @on-focus=\"handleFocus\"\n        @on-click=\"handleIconClick\"\n      />\n      <!-- <Icon type=\"ios-arrow-back\" /> -->\n    </div>\n    <div class=\"example\" v-if=\"liQuortreeShow\">\n      <div class=\"example-description\">\n        <Input\n          type=\"text\"\n          search\n          placeholder=\"请输入搜索内容\"\n          v-model=\"searchListModel\"\n          @on-search=\"handleSearchMethod\"\n        />\n      </div>\n      <div class=\"example-tree\">\n        <Spin v-if=\"searchLoading\" :fix=\"true\"></Spin>\n        <ul class=\"search-list\" v-if=\"searchSwitchtree\">\n          <li\n            v-for=\"(option, index) in searchListData\"\n            :key=\"index\"\n            :value=\"option.id\"\n            :class=\"{caterv:option.id ===isActive,searchSelected:searchSelectedActive}\"\n            @click=\"handleListClick(option.id,$event)\"\n          >{{option.attrs.attrs.qymc.name}}</li>\n        </ul>\n        <LiquorTree\n          v-else\n          ref=\"treeRef\"\n          :data=\"tableTreeData\"\n          :filter=\"treeFilter2\"\n          :options=\"treeOptions2\"\n          @node:checked=\"handleNodeChecked\"\n          @node:unchecked=\"handleNodeUnchecked\"\n        >\n          <div slot-scope=\"{ node }\" class=\"node-container\" @mouseup.stop=\"stopTree\">\n            <div class=\"node-text\">{{ node.text }}</div>\n          </div>\n        </LiquorTree>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport LiquorTree from \"liquor-tree\";\nimport { convertTreeArray } from \"@/utils/base\";\nimport { getRegionBaseList, getRegionBaseSearch } from \"@/api\";\nexport default {\n  props: {},\n  data() {\n    return {\n      iconDown: \"ios-arrow-back\",\n      value: [],\n      text: \"\",\n      isActive: 0,\n      liQuortreeShow: false,\n      treeData2: [],\n      treeOptions2: {\n        checkbox: true,\n        filter: {\n          plainList: true\n        },\n        async fetchData(node) {\n          const res = await getRegionBaseList(node.data.value);\n          return convertTreeArray(res);\n        }\n      },\n      treeFilter2: \"\",\n      SelectionArray: [],\n      searchListModel: \"\",\n      searchListModelArray: [],\n      searchListData: \"\",\n      searchLoading: false,\n      searchSwitchtree: false,\n      searchSelectedActive: false,\n      //\n      searchEcho: {\n        text: [],\n        value: []\n      },\n      //\n      treeEcho: {\n        text: [],\n        value: []\n      }\n    };\n  },\n  computed: {\n    // 表格树数据\n    tableTreeData() {\n      let data = convertTreeArray(this.treeData2);\n      return data;\n    }\n  },\n  created() {},\n  async mounted() {\n    this.treeData2 = await getRegionBaseList(-1);\n  },\n  watch: {},\n  methods: {\n    handleIconClick() {\n      this.liQuortreeShow\n        ? ((this.iconDown = \"ios-arrow-back\"), (this.liQuortreeShow = false))\n        : ((this.iconDown = \"ios-arrow-down\"), (this.liQuortreeShow = true));\n    },\n    // 点击首层input框\n    handleFocus() {\n      this.liQuortreeShow\n        ? 0\n        : ((this.iconDown = \"ios-arrow-down\"), (this.liQuortreeShow = true));\n    },\n    /* 搜索功能点击list */\n    handleListClick(id, data) {\n      let name = data.currentTarget.innerHTML;\n      data.currentTarget.style.background = \"#eee\";\n      // 第一次筛选：选出当前数组中相同的数据\n      let s = this.searchListModelArray.filter(item => {\n        return item.value === id;\n      });\n      // 第二次筛选：数组去重，并取消list选中状态\n      if (s.length) {\n        this.searchListModelArray = this.searchListModelArray.filter(item => {\n          return item.value !== id;\n        });\n        data.currentTarget.style.background = \"#fff\";\n      } else {\n        this.searchListModelArray.push({ text: name, value: id });\n      }\n      // 回显数据拼接\n      let echoDisplay = this.searchListModelArray.map(item => {\n        return item.text;\n      });\n      let echoId = this.searchListModelArray.map(item => {\n        return item.value;\n      });\n      this.searchEcho = { text: echoDisplay, value: echoId };\n      this.text = [...this.treeEcho.text, ...this.searchEcho.text].toString();\n      this.value = [...this.treeEcho.value, ...this.searchEcho.value];\n    },\n    // 开启搜索功能\n    async handleSearchMethod(searchText) {\n      this.searchSwitchtree = true;\n      if (searchText) {\n        this.searchLoading = true;\n        try {\n          const res = await getRegionBaseSearch(0, 30, searchText);\n          this.searchListData = res.data;\n          this.searchLoading = false;\n        } catch (error) {\n          console.log(error);\n        }\n      } else {\n        this.searchListData = [];\n        this.searchSwitchtree = false;\n      }\n    },\n    // tree的点击（多选选中）\n    handleNodeChecked() {\n      this.SelectionArray = this.$refs.treeRef\n        .findAll({\n          state: { checked: true }\n        })\n        .map(element => {\n          return { text: element.data.text, value: element.data.value };\n        });\n      let treeEchoText = this.SelectionArray.map(item => {\n        return item.text;\n      });\n      let treeEchoValue = this.SelectionArray.map(item => {\n        return item.value;\n      });\n      this.treeEcho = {\n        text: treeEchoText,\n        value: treeEchoValue\n      };\n      this.text = [...this.searchEcho.text, ...this.treeEcho.text].toString();\n      this.value = [...this.searchEcho.value, ...this.treeEcho.value];\n    },\n    // 多选选中取消\n    handleNodeUnchecked(data) {\n      this.SelectionArray = this.SelectionArray.filter(element => {\n        return element.value !== data.data.value;\n      });\n      this.text = this.SelectionArray.map(item => {\n        return item.text;\n      }).toString();\n      this.value = this.SelectionArray.map(item => {\n        return item.value;\n      });\n    }\n  },\n  components: {\n    LiquorTree\n  }\n};\n</script>\n\n<style scoped lang=\"scss\">\n.li-quor-Tree {\n  width: 24rem;\n  height: 100%;\n  flex-basis: 49%;\n  .example {\n    box-sizing: border-box;\n    border: 1px solid #eee;\n    margin-top: 5px;\n    .example-tree {\n      position: absolute;\n      width: 100%;\n      height: 20rem;\n      overflow-x: hidden;\n      overflow-y: auto;\n    }\n    .search-list {\n      li {\n        padding: 0.5rem 1rem;\n        cursor: pointer;\n        &:hover {\n          background-color: #f7f2e7;\n        }\n      }\n      .caterv {\n        background-color: #f7f2e7;\n      }\n      .searchSelected {\n        background-color: #eee;\n      }\n    }\n    .example-description {\n      width: 90%;\n      margin: 1rem auto;\n    }\n  }\n}\n\n.tree-highlights .tree-node.matched > .tree-content {\n  background: #f7f2e7;\n}\n\n.node-info {\n  display: flex;\n  width: 100%;\n  justify-content: space-between;\n}\n</style>\n"]}]}