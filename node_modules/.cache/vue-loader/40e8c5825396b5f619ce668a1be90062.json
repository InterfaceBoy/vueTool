{"remainingRequest":"/Users/heyuanpeng/个人项目/vueTool/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/heyuanpeng/个人项目/vueTool/node_modules/vue-easytable/libs/v-checkbox/src/checkbox.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/heyuanpeng/个人项目/vueTool/node_modules/vue-easytable/libs/v-checkbox/src/checkbox.vue","mtime":1573543942417},{"path":"/Users/heyuanpeng/个人项目/vueTool/node_modules/cache-loader/dist/cjs.js","mtime":1567574739571},{"path":"/Users/heyuanpeng/个人项目/vueTool/node_modules/babel-loader/lib/index.js","mtime":1565602919806},{"path":"/Users/heyuanpeng/个人项目/vueTool/node_modules/cache-loader/dist/cjs.js","mtime":1567574739571},{"path":"/Users/heyuanpeng/个人项目/vueTool/node_modules/vue-loader/lib/index.js","mtime":1565602921100}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport utils from '../../src/utils/utils.js'\n\nexport default{\n    name: 'v-checkbox',\n    props: {\n        value: {\n            type: [String, Number, Boolean]\n        },\n        // use in checkbox-group\n        label: {\n            type: [String, Number],\n            require: true\n        },\n        disabled: Boolean,\n        // partial selection effect\n        indeterminate: Boolean,\n        showSlot:{\n            type:Boolean,\n            default:true\n        }\n\n    },\n    data(){\n        return {\n            model: this.value,\n            _checkboxGroup: {}\n        }\n    },\n\n    computed: {\n\n        checkboxClasses(){\n\n            return [\n                'v-checkbox',\n                {\n                    ['v-checkbox-checked']: this.model,\n                    ['v-checkbox-disabled']: this.disabled,\n                    ['v-checkbox-indeterminate']: this.indeterminate,\n                }\n            ]\n        },\n\n        isCheckBoxGroup() {\n\n            this._checkboxGroup = utils.getParentCompByName(this, 'v-checkbox-group');\n            return this._checkboxGroup ? true : false;\n        },\n\n        // 是否横向显示还是纵向显示\n        displayType(){\n\n            var style = 'inline-block';\n\n            if (this._checkboxGroup) {\n                style = this._checkboxGroup.isVerticalShow ? 'block' : 'inline-block';\n            }\n            return style;\n        },\n    },\n\n    methods: {\n\n        change (event) {\n            if (this.disabled) {\n\n                this.model = !this.model;\n                return false;\n            }\n            const checked = event.target.checked;\n\n            this.$emit('input', checked);\n            this.$emit('change');\n\n            if (this.isCheckBoxGroup) {\n\n                this._checkboxGroup.updateModel(this.label, checked);\n            }\n        },\n\n        initModel(){\n\n            if (this.isCheckBoxGroup) {\n\n                let checkboxGroup = this._checkboxGroup;\n                if (Array.isArray(checkboxGroup.value) && checkboxGroup.value.length > 0) {\n\n                    if (checkboxGroup.value.indexOf(this.label) > -1) {\n\n                        this.model = true;\n                    }\n                }\n            } else {\n\n                this.model = this.value;\n            }\n        },\n\n        // 通过单选更新 model\n        updateModelBySingle(){\n\n            if (!this.disabled){\n                this.model = this.value;\n            }\n        },\n\n        // 父组件调用更新 model\n        updateModelByGroup(checkBoxGroup){\n\n            if (checkBoxGroup.indexOf(this.label) > -1) {\n\n                if (!this.disabled){\n                    this.model = true;\n                }\n            }else{\n\n                if (!this.disabled){\n                    this.model = false;\n                }\n            }\n\n        }\n    },\n\n    created(){\n\n        this.initModel();\n    },\n\n    watch: {\n\n        'value'(val){\n\n            this.updateModelBySingle();\n\n        }\n    }\n}\n",{"version":3,"sources":["checkbox.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAkfile":"checkbox.vue","sourceRoot":"node_modules/vue-easytable/libs/v-checkbox/src","sourcesContent":["<template>\r\n    <label class=\"v-checkbox-wrapper\" :style=\"{'display':displayType}\">\r\n        <span :class=\"checkboxClasses\">\r\n            <input\r\n                    class=\"v-checkbox-input\"\r\n                    type=\"checkbox\"\r\n                    :value=\"label\"\r\n                    v-model=\"model\"\r\n                    @change=\"change\"\r\n            />\r\n\r\n            <span class=\"v-checkbox-inner\"></span>\r\n        </span>\r\n        <span><slot v-if=\"showSlot\">{{ label }}</slot></span>\r\n    </label>\r\n</template>\r\n\r\n<script>\r\n    import utils from '../../src/utils/utils.js'\r\n\r\n    export default{\r\n        name: 'v-checkbox',\r\n        props: {\r\n            value: {\r\n                type: [String, Number, Boolean]\r\n            },\r\n            // use in checkbox-group\r\n            label: {\r\n                type: [String, Number],\r\n                require: true\r\n            },\r\n            disabled: Boolean,\r\n            // partial selection effect\r\n            indeterminate: Boolean,\r\n            showSlot:{\r\n                type:Boolean,\r\n                default:true\r\n            }\r\n\r\n        },\r\n        data(){\r\n            return {\r\n                model: this.value,\r\n                _checkboxGroup: {}\r\n            }\r\n        },\r\n\r\n        computed: {\r\n\r\n            checkboxClasses(){\r\n\r\n                return [\r\n                    'v-checkbox',\r\n                    {\r\n                        ['v-checkbox-checked']: this.model,\r\n                        ['v-checkbox-disabled']: this.disabled,\r\n                        ['v-checkbox-indeterminate']: this.indeterminate,\r\n                    }\r\n                ]\r\n            },\r\n\r\n            isCheckBoxGroup() {\r\n\r\n                this._checkboxGroup = utils.getParentCompByName(this, 'v-checkbox-group');\r\n                return this._checkboxGroup ? true : false;\r\n            },\r\n\r\n            // 是否横向显示还是纵向显示\r\n            displayType(){\r\n\r\n                var style = 'inline-block';\r\n\r\n                if (this._checkboxGroup) {\r\n                    style = this._checkboxGroup.isVerticalShow ? 'block' : 'inline-block';\r\n                }\r\n                return style;\r\n            },\r\n        },\r\n\r\n        methods: {\r\n\r\n            change (event) {\r\n                if (this.disabled) {\r\n\r\n                    this.model = !this.model;\r\n                    return false;\r\n                }\r\n                const checked = event.target.checked;\r\n\r\n                this.$emit('input', checked);\r\n                this.$emit('change');\r\n\r\n                if (this.isCheckBoxGroup) {\r\n\r\n                    this._checkboxGroup.updateModel(this.label, checked);\r\n                }\r\n            },\r\n\r\n            initModel(){\r\n\r\n                if (this.isCheckBoxGroup) {\r\n\r\n                    let checkboxGroup = this._checkboxGroup;\r\n                    if (Array.isArray(checkboxGroup.value) && checkboxGroup.value.length > 0) {\r\n\r\n                        if (checkboxGroup.value.indexOf(this.label) > -1) {\r\n\r\n                            this.model = true;\r\n                        }\r\n                    }\r\n                } else {\r\n\r\n                    this.model = this.value;\r\n                }\r\n            },\r\n\r\n            // 通过单选更新 model\r\n            updateModelBySingle(){\r\n\r\n                if (!this.disabled){\r\n                    this.model = this.value;\r\n                }\r\n            },\r\n\r\n            // 父组件调用更新 model\r\n            updateModelByGroup(checkBoxGroup){\r\n\r\n                if (checkBoxGroup.indexOf(this.label) > -1) {\r\n\r\n                    if (!this.disabled){\r\n                        this.model = true;\r\n                    }\r\n                }else{\r\n\r\n                    if (!this.disabled){\r\n                        this.model = false;\r\n                    }\r\n                }\r\n\r\n            }\r\n        },\r\n\r\n        created(){\r\n\r\n            this.initModel();\r\n        },\r\n\r\n        watch: {\r\n\r\n            'value'(val){\r\n\r\n                this.updateModelBySingle();\r\n\r\n            }\r\n        }\r\n    }\r\n</script>"]}]}